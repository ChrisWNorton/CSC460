
P2_WRR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  00001082  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000100e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000015ba  00800200  00800200  00001082  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001082  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000010b4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001e8  00000000  00000000  000010f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002457  00000000  00000000  000012e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001020  00000000  00000000  00003737  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f11  00000000  00000000  00004757  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000558  00000000  00000000  00005668  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b18  00000000  00000000  00005bc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001261  00000000  00000000  000066d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001f8  00000000  00000000  00007939  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	7a c0       	rjmp	.+244    	; 0xf6 <__ctors_end>
       2:	00 00       	nop
       4:	8a c0       	rjmp	.+276    	; 0x11a <__bad_interrupt>
       6:	00 00       	nop
       8:	88 c0       	rjmp	.+272    	; 0x11a <__bad_interrupt>
       a:	00 00       	nop
       c:	86 c0       	rjmp	.+268    	; 0x11a <__bad_interrupt>
       e:	00 00       	nop
      10:	84 c0       	rjmp	.+264    	; 0x11a <__bad_interrupt>
      12:	00 00       	nop
      14:	82 c0       	rjmp	.+260    	; 0x11a <__bad_interrupt>
      16:	00 00       	nop
      18:	80 c0       	rjmp	.+256    	; 0x11a <__bad_interrupt>
      1a:	00 00       	nop
      1c:	7e c0       	rjmp	.+252    	; 0x11a <__bad_interrupt>
      1e:	00 00       	nop
      20:	7c c0       	rjmp	.+248    	; 0x11a <__bad_interrupt>
      22:	00 00       	nop
      24:	7a c0       	rjmp	.+244    	; 0x11a <__bad_interrupt>
      26:	00 00       	nop
      28:	78 c0       	rjmp	.+240    	; 0x11a <__bad_interrupt>
      2a:	00 00       	nop
      2c:	76 c0       	rjmp	.+236    	; 0x11a <__bad_interrupt>
      2e:	00 00       	nop
      30:	74 c0       	rjmp	.+232    	; 0x11a <__bad_interrupt>
      32:	00 00       	nop
      34:	72 c0       	rjmp	.+228    	; 0x11a <__bad_interrupt>
      36:	00 00       	nop
      38:	70 c0       	rjmp	.+224    	; 0x11a <__bad_interrupt>
      3a:	00 00       	nop
      3c:	6e c0       	rjmp	.+220    	; 0x11a <__bad_interrupt>
      3e:	00 00       	nop
      40:	6c c0       	rjmp	.+216    	; 0x11a <__bad_interrupt>
      42:	00 00       	nop
      44:	6a c0       	rjmp	.+212    	; 0x11a <__bad_interrupt>
      46:	00 00       	nop
      48:	68 c0       	rjmp	.+208    	; 0x11a <__bad_interrupt>
      4a:	00 00       	nop
      4c:	66 c0       	rjmp	.+204    	; 0x11a <__bad_interrupt>
      4e:	00 00       	nop
      50:	64 c0       	rjmp	.+200    	; 0x11a <__bad_interrupt>
      52:	00 00       	nop
      54:	62 c0       	rjmp	.+196    	; 0x11a <__bad_interrupt>
      56:	00 00       	nop
      58:	60 c0       	rjmp	.+192    	; 0x11a <__bad_interrupt>
      5a:	00 00       	nop
      5c:	5e c0       	rjmp	.+188    	; 0x11a <__bad_interrupt>
      5e:	00 00       	nop
      60:	5c c0       	rjmp	.+184    	; 0x11a <__bad_interrupt>
      62:	00 00       	nop
      64:	5a c0       	rjmp	.+180    	; 0x11a <__bad_interrupt>
      66:	00 00       	nop
      68:	58 c0       	rjmp	.+176    	; 0x11a <__bad_interrupt>
      6a:	00 00       	nop
      6c:	56 c0       	rjmp	.+172    	; 0x11a <__bad_interrupt>
      6e:	00 00       	nop
      70:	54 c0       	rjmp	.+168    	; 0x11a <__bad_interrupt>
      72:	00 00       	nop
      74:	52 c0       	rjmp	.+164    	; 0x11a <__bad_interrupt>
      76:	00 00       	nop
      78:	50 c0       	rjmp	.+160    	; 0x11a <__bad_interrupt>
      7a:	00 00       	nop
      7c:	4e c0       	rjmp	.+156    	; 0x11a <__bad_interrupt>
      7e:	00 00       	nop
      80:	2f c7       	rjmp	.+3678   	; 0xee0 <__vector_32>
      82:	00 00       	nop
      84:	4a c0       	rjmp	.+148    	; 0x11a <__bad_interrupt>
      86:	00 00       	nop
      88:	48 c0       	rjmp	.+144    	; 0x11a <__bad_interrupt>
      8a:	00 00       	nop
      8c:	46 c0       	rjmp	.+140    	; 0x11a <__bad_interrupt>
      8e:	00 00       	nop
      90:	44 c0       	rjmp	.+136    	; 0x11a <__bad_interrupt>
      92:	00 00       	nop
      94:	42 c0       	rjmp	.+132    	; 0x11a <__bad_interrupt>
      96:	00 00       	nop
      98:	40 c0       	rjmp	.+128    	; 0x11a <__bad_interrupt>
      9a:	00 00       	nop
      9c:	3e c0       	rjmp	.+124    	; 0x11a <__bad_interrupt>
      9e:	00 00       	nop
      a0:	3c c0       	rjmp	.+120    	; 0x11a <__bad_interrupt>
      a2:	00 00       	nop
      a4:	3a c0       	rjmp	.+116    	; 0x11a <__bad_interrupt>
      a6:	00 00       	nop
      a8:	38 c0       	rjmp	.+112    	; 0x11a <__bad_interrupt>
      aa:	00 00       	nop
      ac:	36 c0       	rjmp	.+108    	; 0x11a <__bad_interrupt>
      ae:	00 00       	nop
      b0:	34 c0       	rjmp	.+104    	; 0x11a <__bad_interrupt>
      b2:	00 00       	nop
      b4:	32 c0       	rjmp	.+100    	; 0x11a <__bad_interrupt>
      b6:	00 00       	nop
      b8:	30 c0       	rjmp	.+96     	; 0x11a <__bad_interrupt>
      ba:	00 00       	nop
      bc:	2e c0       	rjmp	.+92     	; 0x11a <__bad_interrupt>
      be:	00 00       	nop
      c0:	2c c0       	rjmp	.+88     	; 0x11a <__bad_interrupt>
      c2:	00 00       	nop
      c4:	2a c0       	rjmp	.+84     	; 0x11a <__bad_interrupt>
      c6:	00 00       	nop
      c8:	28 c0       	rjmp	.+80     	; 0x11a <__bad_interrupt>
      ca:	00 00       	nop
      cc:	26 c0       	rjmp	.+76     	; 0x11a <__bad_interrupt>
      ce:	00 00       	nop
      d0:	24 c0       	rjmp	.+72     	; 0x11a <__bad_interrupt>
      d2:	00 00       	nop
      d4:	22 c0       	rjmp	.+68     	; 0x11a <__bad_interrupt>
      d6:	00 00       	nop
      d8:	20 c0       	rjmp	.+64     	; 0x11a <__bad_interrupt>
      da:	00 00       	nop
      dc:	1e c0       	rjmp	.+60     	; 0x11a <__bad_interrupt>
      de:	00 00       	nop
      e0:	1c c0       	rjmp	.+56     	; 0x11a <__bad_interrupt>
      e2:	00 00       	nop
      e4:	7d 05       	cpc	r23, r13
      e6:	55 05       	cpc	r21, r5
      e8:	7d 05       	cpc	r23, r13
      ea:	8b 05       	cpc	r24, r11
      ec:	81 05       	cpc	r24, r1
      ee:	99 05       	cpc	r25, r9
      f0:	9f 05       	cpc	r25, r15
      f2:	ac 05       	cpc	r26, r12
      f4:	b9 05       	cpc	r27, r9

000000f6 <__ctors_end>:
      f6:	11 24       	eor	r1, r1
      f8:	1f be       	out	0x3f, r1	; 63
      fa:	cf ef       	ldi	r28, 0xFF	; 255
      fc:	d1 e2       	ldi	r29, 0x21	; 33
      fe:	de bf       	out	0x3e, r29	; 62
     100:	cd bf       	out	0x3d, r28	; 61
     102:	00 e0       	ldi	r16, 0x00	; 0
     104:	0c bf       	out	0x3c, r16	; 60

00000106 <__do_clear_bss>:
     106:	27 e1       	ldi	r18, 0x17	; 23
     108:	a0 e0       	ldi	r26, 0x00	; 0
     10a:	b2 e0       	ldi	r27, 0x02	; 2
     10c:	01 c0       	rjmp	.+2      	; 0x110 <.do_clear_bss_start>

0000010e <.do_clear_bss_loop>:
     10e:	1d 92       	st	X+, r1

00000110 <.do_clear_bss_start>:
     110:	aa 3b       	cpi	r26, 0xBA	; 186
     112:	b2 07       	cpc	r27, r18
     114:	e1 f7       	brne	.-8      	; 0x10e <.do_clear_bss_loop>
     116:	35 d7       	rcall	.+3690   	; 0xf82 <main>
     118:	78 c7       	rjmp	.+3824   	; 0x100a <_exit>

0000011a <__bad_interrupt>:
     11a:	72 cf       	rjmp	.-284    	; 0x0 <__vectors>

0000011c <CSwitch>:
     11c:	0f 92       	push	r0
     11e:	1f 92       	push	r1
     120:	2f 92       	push	r2
     122:	3f 92       	push	r3
     124:	4f 92       	push	r4
     126:	5f 92       	push	r5
     128:	6f 92       	push	r6
     12a:	7f 92       	push	r7
     12c:	8f 92       	push	r8
     12e:	9f 92       	push	r9
     130:	af 92       	push	r10
     132:	bf 92       	push	r11
     134:	cf 92       	push	r12
     136:	df 92       	push	r13
     138:	ef 92       	push	r14
     13a:	ff 92       	push	r15
     13c:	0f 93       	push	r16
     13e:	1f 93       	push	r17
     140:	2f 93       	push	r18
     142:	3f 93       	push	r19
     144:	4f 93       	push	r20
     146:	5f 93       	push	r21
     148:	6f 93       	push	r22
     14a:	7f 93       	push	r23
     14c:	8f 93       	push	r24
     14e:	9f 93       	push	r25
     150:	af 93       	push	r26
     152:	bf 93       	push	r27
     154:	cf 93       	push	r28
     156:	df 93       	push	r29
     158:	ef 93       	push	r30
     15a:	ff 93       	push	r31
     15c:	fc b7       	in	r31, 0x3c	; 60
     15e:	ff 93       	push	r31
     160:	0f b7       	in	r16, 0x3f	; 63
     162:	0f 93       	push	r16
     164:	ed b7       	in	r30, 0x3d	; 61
     166:	fe b7       	in	r31, 0x3e	; 62
     168:	e0 93 b8 17 	sts	0x17B8, r30	; 0x8017b8 <KernelSp>
     16c:	f0 93 b9 17 	sts	0x17B9, r31	; 0x8017b9 <KernelSp+0x1>
     170:	e0 91 b6 17 	lds	r30, 0x17B6	; 0x8017b6 <CurrentSp>
     174:	f0 91 b7 17 	lds	r31, 0x17B7	; 0x8017b7 <CurrentSp+0x1>
     178:	ed bf       	out	0x3d, r30	; 61
     17a:	fe bf       	out	0x3e, r31	; 62
     17c:	0f 91       	pop	r16
     17e:	0f bf       	out	0x3f, r16	; 63
     180:	ff 91       	pop	r31
     182:	fc bf       	out	0x3c, r31	; 60
     184:	ff 91       	pop	r31
     186:	ef 91       	pop	r30
     188:	df 91       	pop	r29
     18a:	cf 91       	pop	r28
     18c:	bf 91       	pop	r27
     18e:	af 91       	pop	r26
     190:	9f 91       	pop	r25
     192:	8f 91       	pop	r24
     194:	7f 91       	pop	r23
     196:	6f 91       	pop	r22
     198:	5f 91       	pop	r21
     19a:	4f 91       	pop	r20
     19c:	3f 91       	pop	r19
     19e:	2f 91       	pop	r18
     1a0:	1f 91       	pop	r17
     1a2:	0f 91       	pop	r16
     1a4:	ff 90       	pop	r15
     1a6:	ef 90       	pop	r14
     1a8:	df 90       	pop	r13
     1aa:	cf 90       	pop	r12
     1ac:	bf 90       	pop	r11
     1ae:	af 90       	pop	r10
     1b0:	9f 90       	pop	r9
     1b2:	8f 90       	pop	r8
     1b4:	7f 90       	pop	r7
     1b6:	6f 90       	pop	r6
     1b8:	5f 90       	pop	r5
     1ba:	4f 90       	pop	r4
     1bc:	3f 90       	pop	r3
     1be:	2f 90       	pop	r2
     1c0:	1f 90       	pop	r1
     1c2:	0f 90       	pop	r0
     1c4:	18 95       	reti

000001c6 <Enter_Kernel>:
     1c6:	0f 92       	push	r0
     1c8:	1f 92       	push	r1
     1ca:	2f 92       	push	r2
     1cc:	3f 92       	push	r3
     1ce:	4f 92       	push	r4
     1d0:	5f 92       	push	r5
     1d2:	6f 92       	push	r6
     1d4:	7f 92       	push	r7
     1d6:	8f 92       	push	r8
     1d8:	9f 92       	push	r9
     1da:	af 92       	push	r10
     1dc:	bf 92       	push	r11
     1de:	cf 92       	push	r12
     1e0:	df 92       	push	r13
     1e2:	ef 92       	push	r14
     1e4:	ff 92       	push	r15
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	2f 93       	push	r18
     1ec:	3f 93       	push	r19
     1ee:	4f 93       	push	r20
     1f0:	5f 93       	push	r21
     1f2:	6f 93       	push	r22
     1f4:	7f 93       	push	r23
     1f6:	8f 93       	push	r24
     1f8:	9f 93       	push	r25
     1fa:	af 93       	push	r26
     1fc:	bf 93       	push	r27
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
     206:	fc b7       	in	r31, 0x3c	; 60
     208:	ff 93       	push	r31
     20a:	0f b7       	in	r16, 0x3f	; 63
     20c:	0f 93       	push	r16
     20e:	ed b7       	in	r30, 0x3d	; 61
     210:	fe b7       	in	r31, 0x3e	; 62
     212:	e0 93 b6 17 	sts	0x17B6, r30	; 0x8017b6 <CurrentSp>
     216:	f0 93 b7 17 	sts	0x17B7, r31	; 0x8017b7 <CurrentSp+0x1>
     21a:	e0 91 b8 17 	lds	r30, 0x17B8	; 0x8017b8 <KernelSp>
     21e:	f0 91 b9 17 	lds	r31, 0x17B9	; 0x8017b9 <KernelSp+0x1>
     222:	ed bf       	out	0x3d, r30	; 61
     224:	fe bf       	out	0x3e, r31	; 62
     226:	0f 91       	pop	r16
     228:	0f bf       	out	0x3f, r16	; 63
     22a:	ff 91       	pop	r31
     22c:	fc bf       	out	0x3c, r31	; 60
     22e:	ff 91       	pop	r31
     230:	ef 91       	pop	r30
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	bf 91       	pop	r27
     238:	af 91       	pop	r26
     23a:	9f 91       	pop	r25
     23c:	8f 91       	pop	r24
     23e:	7f 91       	pop	r23
     240:	6f 91       	pop	r22
     242:	5f 91       	pop	r21
     244:	4f 91       	pop	r20
     246:	3f 91       	pop	r19
     248:	2f 91       	pop	r18
     24a:	1f 91       	pop	r17
     24c:	0f 91       	pop	r16
     24e:	ff 90       	pop	r15
     250:	ef 90       	pop	r14
     252:	df 90       	pop	r13
     254:	cf 90       	pop	r12
     256:	bf 90       	pop	r11
     258:	af 90       	pop	r10
     25a:	9f 90       	pop	r9
     25c:	8f 90       	pop	r8
     25e:	7f 90       	pop	r7
     260:	6f 90       	pop	r6
     262:	5f 90       	pop	r5
     264:	4f 90       	pop	r4
     266:	3f 90       	pop	r3
     268:	2f 90       	pop	r2
     26a:	1f 90       	pop	r1
     26c:	0f 90       	pop	r0
     26e:	08 95       	ret

00000270 <blink>:
 *  Author: abdullah
 */ 
#include "blink.h"

void blink(int bit) {
	Disable_Interrupt();
     270:	f8 94       	cli
	// set PORTA as output
	DDRA = 0x0FF;
     272:	9f ef       	ldi	r25, 0xFF	; 255
     274:	91 b9       	out	0x01, r25	; 1
	
	PORTA &= (0<< bit); // OFF
     276:	92 b1       	in	r25, 0x02	; 2
     278:	12 b8       	out	0x02, r1	; 2
	PORTA |= (1<<bit);	// ON
     27a:	42 b1       	in	r20, 0x02	; 2
     27c:	21 e0       	ldi	r18, 0x01	; 1
     27e:	30 e0       	ldi	r19, 0x00	; 0
     280:	b9 01       	movw	r22, r18
     282:	02 c0       	rjmp	.+4      	; 0x288 <blink+0x18>
     284:	66 0f       	add	r22, r22
     286:	77 1f       	adc	r23, r23
     288:	8a 95       	dec	r24
     28a:	e2 f7       	brpl	.-8      	; 0x284 <blink+0x14>
     28c:	cb 01       	movw	r24, r22
     28e:	84 2b       	or	r24, r20
     290:	82 b9       	out	0x02, r24	; 2
	// Without NOP 0.25 us, with 2 NOP 0.5 us
	NoOperation();
     292:	00 00       	nop
	NoOperation();
     294:	00 00       	nop
	PORTA &= (0<< bit); // OFF
     296:	82 b1       	in	r24, 0x02	; 2
     298:	12 b8       	out	0x02, r1	; 2
	Enable_Interrupt();
     29a:	78 94       	sei
     29c:	08 95       	ret

0000029e <Idle_Task>:
unsigned int Now()
{
	unsigned int temp_time = TCNT3;
	unsigned int time = (10 * current_tick) + (temp_time / 2000);
	return time;
}
     29e:	ff cf       	rjmp	.-2      	; 0x29e <Idle_Task>

000002a0 <Task_Terminate>:
     2a0:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <KernelActive>
     2a4:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     2a8:	89 2b       	or	r24, r25
     2aa:	69 f0       	breq	.+26     	; 0x2c6 <Task_Terminate+0x26>
     2ac:	f8 94       	cli
     2ae:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     2b2:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     2b6:	e6 5f       	subi	r30, 0xF6	; 246
     2b8:	fe 4f       	sbci	r31, 0xFE	; 254
     2ba:	83 e0       	ldi	r24, 0x03	; 3
     2bc:	80 83       	st	Z, r24
     2be:	80 e1       	ldi	r24, 0x10	; 16
     2c0:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     2c4:	80 cf       	rjmp	.-256    	; 0x1c6 <Enter_Kernel>
     2c6:	08 95       	ret

000002c8 <enqueue>:
     2c8:	fc 01       	movw	r30, r24
     2ca:	80 a1       	ldd	r24, Z+32	; 0x20
     2cc:	91 a1       	ldd	r25, Z+33	; 0x21
     2ce:	40 97       	sbiw	r24, 0x10	; 16
     2d0:	19 f4       	brne	.+6      	; 0x2d8 <enqueue+0x10>
     2d2:	8c e0       	ldi	r24, 0x0C	; 12
     2d4:	88 b9       	out	0x08, r24	; 8
     2d6:	ff cf       	rjmp	.-2      	; 0x2d6 <enqueue+0xe>
     2d8:	a4 a1       	ldd	r26, Z+36	; 0x24
     2da:	b5 a1       	ldd	r27, Z+37	; 0x25
     2dc:	aa 0f       	add	r26, r26
     2de:	bb 1f       	adc	r27, r27
     2e0:	ae 0f       	add	r26, r30
     2e2:	bf 1f       	adc	r27, r31
     2e4:	11 96       	adiw	r26, 0x01	; 1
     2e6:	7c 93       	st	X, r23
     2e8:	6e 93       	st	-X, r22
     2ea:	80 a1       	ldd	r24, Z+32	; 0x20
     2ec:	91 a1       	ldd	r25, Z+33	; 0x21
     2ee:	01 96       	adiw	r24, 0x01	; 1
     2f0:	91 a3       	std	Z+33, r25	; 0x21
     2f2:	80 a3       	std	Z+32, r24	; 0x20
     2f4:	24 a1       	ldd	r18, Z+36	; 0x24
     2f6:	35 a1       	ldd	r19, Z+37	; 0x25
     2f8:	2f 5f       	subi	r18, 0xFF	; 255
     2fa:	3f 4f       	sbci	r19, 0xFF	; 255
     2fc:	2f 70       	andi	r18, 0x0F	; 15
     2fe:	30 78       	andi	r19, 0x80	; 128
     300:	33 23       	and	r19, r19
     302:	34 f4       	brge	.+12     	; 0x310 <enqueue+0x48>
     304:	21 50       	subi	r18, 0x01	; 1
     306:	31 09       	sbc	r19, r1
     308:	20 6f       	ori	r18, 0xF0	; 240
     30a:	3f 6f       	ori	r19, 0xFF	; 255
     30c:	2f 5f       	subi	r18, 0xFF	; 255
     30e:	3f 4f       	sbci	r19, 0xFF	; 255
     310:	35 a3       	std	Z+37, r19	; 0x25
     312:	24 a3       	std	Z+36, r18	; 0x24
     314:	08 95       	ret

00000316 <dequeue>:
     316:	fc 01       	movw	r30, r24
     318:	80 a1       	ldd	r24, Z+32	; 0x20
     31a:	91 a1       	ldd	r25, Z+33	; 0x21
     31c:	89 2b       	or	r24, r25
     31e:	19 f4       	brne	.+6      	; 0x326 <dequeue+0x10>
     320:	8d e0       	ldi	r24, 0x0D	; 13
     322:	88 b9       	out	0x08, r24	; 8
     324:	ff cf       	rjmp	.-2      	; 0x324 <dequeue+0xe>
     326:	a2 a1       	ldd	r26, Z+34	; 0x22
     328:	b3 a1       	ldd	r27, Z+35	; 0x23
     32a:	aa 0f       	add	r26, r26
     32c:	bb 1f       	adc	r27, r27
     32e:	ae 0f       	add	r26, r30
     330:	bf 1f       	adc	r27, r31
     332:	8d 91       	ld	r24, X+
     334:	9c 91       	ld	r25, X
     336:	20 a1       	ldd	r18, Z+32	; 0x20
     338:	31 a1       	ldd	r19, Z+33	; 0x21
     33a:	21 50       	subi	r18, 0x01	; 1
     33c:	31 09       	sbc	r19, r1
     33e:	31 a3       	std	Z+33, r19	; 0x21
     340:	20 a3       	std	Z+32, r18	; 0x20
     342:	22 a1       	ldd	r18, Z+34	; 0x22
     344:	33 a1       	ldd	r19, Z+35	; 0x23
     346:	2f 5f       	subi	r18, 0xFF	; 255
     348:	3f 4f       	sbci	r19, 0xFF	; 255
     34a:	2f 70       	andi	r18, 0x0F	; 15
     34c:	30 78       	andi	r19, 0x80	; 128
     34e:	33 23       	and	r19, r19
     350:	34 f4       	brge	.+12     	; 0x35e <dequeue+0x48>
     352:	21 50       	subi	r18, 0x01	; 1
     354:	31 09       	sbc	r19, r1
     356:	20 6f       	ori	r18, 0xF0	; 240
     358:	3f 6f       	ori	r19, 0xFF	; 255
     35a:	2f 5f       	subi	r18, 0xFF	; 255
     35c:	3f 4f       	sbci	r19, 0xFF	; 255
     35e:	33 a3       	std	Z+35, r19	; 0x23
     360:	22 a3       	std	Z+34, r18	; 0x22
     362:	08 95       	ret

00000364 <Dispatch>:
     364:	80 91 04 05 	lds	r24, 0x0504	; 0x800504 <ReadyQSystem+0x20>
     368:	90 91 05 05 	lds	r25, 0x0505	; 0x800505 <ReadyQSystem+0x21>
     36c:	18 16       	cp	r1, r24
     36e:	19 06       	cpc	r1, r25
     370:	9c f4       	brge	.+38     	; 0x398 <Dispatch+0x34>
     372:	84 ee       	ldi	r24, 0xE4	; 228
     374:	94 e0       	ldi	r25, 0x04	; 4
     376:	cf df       	rcall	.-98     	; 0x316 <dequeue>
     378:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <Cp+0x1>
     37c:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <Cp>
     380:	fc 01       	movw	r30, r24
     382:	25 81       	ldd	r18, Z+5	; 0x05
     384:	36 81       	ldd	r19, Z+6	; 0x06
     386:	30 93 b7 17 	sts	0x17B7, r19	; 0x8017b7 <CurrentSp+0x1>
     38a:	20 93 b6 17 	sts	0x17B6, r18	; 0x8017b6 <CurrentSp>
     38e:	e9 5f       	subi	r30, 0xF9	; 249
     390:	fe 4f       	sbci	r31, 0xFE	; 254
     392:	22 e0       	ldi	r18, 0x02	; 2
     394:	20 83       	st	Z, r18
     396:	08 95       	ret
     398:	80 91 2a 05 	lds	r24, 0x052A	; 0x80052a <ReadyQTime+0x20>
     39c:	90 91 2b 05 	lds	r25, 0x052B	; 0x80052b <ReadyQTime+0x21>
     3a0:	18 16       	cp	r1, r24
     3a2:	19 06       	cpc	r1, r25
     3a4:	9c f4       	brge	.+38     	; 0x3cc <Dispatch+0x68>
     3a6:	8a e0       	ldi	r24, 0x0A	; 10
     3a8:	95 e0       	ldi	r25, 0x05	; 5
     3aa:	b5 df       	rcall	.-150    	; 0x316 <dequeue>
     3ac:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <Cp+0x1>
     3b0:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <Cp>
     3b4:	fc 01       	movw	r30, r24
     3b6:	25 81       	ldd	r18, Z+5	; 0x05
     3b8:	36 81       	ldd	r19, Z+6	; 0x06
     3ba:	30 93 b7 17 	sts	0x17B7, r19	; 0x8017b7 <CurrentSp+0x1>
     3be:	20 93 b6 17 	sts	0x17B6, r18	; 0x8017b6 <CurrentSp>
     3c2:	e9 5f       	subi	r30, 0xF9	; 249
     3c4:	fe 4f       	sbci	r31, 0xFE	; 254
     3c6:	22 e0       	ldi	r18, 0x02	; 2
     3c8:	20 83       	st	Z, r18
     3ca:	08 95       	ret
     3cc:	80 91 50 05 	lds	r24, 0x0550	; 0x800550 <ReadyQRR+0x20>
     3d0:	90 91 51 05 	lds	r25, 0x0551	; 0x800551 <ReadyQRR+0x21>
     3d4:	18 16       	cp	r1, r24
     3d6:	19 06       	cpc	r1, r25
     3d8:	9c f4       	brge	.+38     	; 0x400 <__LOCK_REGION_LENGTH__>
     3da:	80 e3       	ldi	r24, 0x30	; 48
     3dc:	95 e0       	ldi	r25, 0x05	; 5
     3de:	9b df       	rcall	.-202    	; 0x316 <dequeue>
     3e0:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <Cp+0x1>
     3e4:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <Cp>
     3e8:	fc 01       	movw	r30, r24
     3ea:	25 81       	ldd	r18, Z+5	; 0x05
     3ec:	36 81       	ldd	r19, Z+6	; 0x06
     3ee:	30 93 b7 17 	sts	0x17B7, r19	; 0x8017b7 <CurrentSp+0x1>
     3f2:	20 93 b6 17 	sts	0x17B6, r18	; 0x8017b6 <CurrentSp>
     3f6:	e9 5f       	subi	r30, 0xF9	; 249
     3f8:	fe 4f       	sbci	r31, 0xFE	; 254
     3fa:	22 e0       	ldi	r18, 0x02	; 2
     3fc:	20 83       	st	Z, r18
     3fe:	08 95       	ret
     400:	80 91 de 04 	lds	r24, 0x04DE	; 0x8004de <ReadyQIdle+0x20>
     404:	90 91 df 04 	lds	r25, 0x04DF	; 0x8004df <ReadyQIdle+0x21>
     408:	18 16       	cp	r1, r24
     40a:	19 06       	cpc	r1, r25
     40c:	9c f4       	brge	.+38     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     40e:	8e eb       	ldi	r24, 0xBE	; 190
     410:	94 e0       	ldi	r25, 0x04	; 4
     412:	81 df       	rcall	.-254    	; 0x316 <dequeue>
     414:	90 93 bb 04 	sts	0x04BB, r25	; 0x8004bb <Cp+0x1>
     418:	80 93 ba 04 	sts	0x04BA, r24	; 0x8004ba <Cp>
     41c:	fc 01       	movw	r30, r24
     41e:	25 81       	ldd	r18, Z+5	; 0x05
     420:	36 81       	ldd	r19, Z+6	; 0x06
     422:	30 93 b7 17 	sts	0x17B7, r19	; 0x8017b7 <CurrentSp+0x1>
     426:	20 93 b6 17 	sts	0x17B6, r18	; 0x8017b6 <CurrentSp>
     42a:	e9 5f       	subi	r30, 0xF9	; 249
     42c:	fe 4f       	sbci	r31, 0xFE	; 254
     42e:	22 e0       	ldi	r18, 0x02	; 2
     430:	20 83       	st	Z, r18
     432:	08 95       	ret
     434:	88 e1       	ldi	r24, 0x18	; 24
     436:	88 b9       	out	0x08, r24	; 8
     438:	ff cf       	rjmp	.-2      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>

0000043a <setReady>:
     43a:	cf 93       	push	r28
     43c:	df 93       	push	r29
     43e:	ec 01       	movw	r28, r24
     440:	8a 81       	ldd	r24, Y+2	; 0x02
     442:	81 30       	cpi	r24, 0x01	; 1
     444:	79 f0       	breq	.+30     	; 0x464 <setReady+0x2a>
     446:	d8 f0       	brcs	.+54     	; 0x47e <setReady+0x44>
     448:	82 30       	cpi	r24, 0x02	; 2
     44a:	39 f0       	breq	.+14     	; 0x45a <setReady+0x20>
     44c:	83 30       	cpi	r24, 0x03	; 3
     44e:	e1 f4       	brne	.+56     	; 0x488 <setReady+0x4e>
     450:	be 01       	movw	r22, r28
     452:	8e eb       	ldi	r24, 0xBE	; 190
     454:	94 e0       	ldi	r25, 0x04	; 4
     456:	38 df       	rcall	.-400    	; 0x2c8 <enqueue>
     458:	1a c0       	rjmp	.+52     	; 0x48e <setReady+0x54>
     45a:	be 01       	movw	r22, r28
     45c:	80 e3       	ldi	r24, 0x30	; 48
     45e:	95 e0       	ldi	r25, 0x05	; 5
     460:	33 df       	rcall	.-410    	; 0x2c8 <enqueue>
     462:	15 c0       	rjmp	.+42     	; 0x48e <setReady+0x54>
     464:	be 01       	movw	r22, r28
     466:	8a e0       	ldi	r24, 0x0A	; 10
     468:	95 e0       	ldi	r25, 0x05	; 5
     46a:	2e df       	rcall	.-420    	; 0x2c8 <enqueue>
     46c:	80 91 2a 05 	lds	r24, 0x052A	; 0x80052a <ReadyQTime+0x20>
     470:	90 91 2b 05 	lds	r25, 0x052B	; 0x80052b <ReadyQTime+0x21>
     474:	02 97       	sbiw	r24, 0x02	; 2
     476:	5c f0       	brlt	.+22     	; 0x48e <setReady+0x54>
     478:	85 e0       	ldi	r24, 0x05	; 5
     47a:	88 b9       	out	0x08, r24	; 8
     47c:	ff cf       	rjmp	.-2      	; 0x47c <setReady+0x42>
     47e:	be 01       	movw	r22, r28
     480:	84 ee       	ldi	r24, 0xE4	; 228
     482:	94 e0       	ldi	r25, 0x04	; 4
     484:	21 df       	rcall	.-446    	; 0x2c8 <enqueue>
     486:	03 c0       	rjmp	.+6      	; 0x48e <setReady+0x54>
     488:	8c e7       	ldi	r24, 0x7C	; 124
     48a:	88 b9       	out	0x08, r24	; 8
     48c:	ff cf       	rjmp	.-2      	; 0x48c <setReady+0x52>
     48e:	c9 5f       	subi	r28, 0xF9	; 249
     490:	de 4f       	sbci	r29, 0xFE	; 254
     492:	81 e0       	ldi	r24, 0x01	; 1
     494:	88 83       	st	Y, r24
     496:	df 91       	pop	r29
     498:	cf 91       	pop	r28
     49a:	08 95       	ret

0000049c <Kernel_Create_Task_At>:
     49c:	8f 92       	push	r8
     49e:	9f 92       	push	r9
     4a0:	af 92       	push	r10
     4a2:	bf 92       	push	r11
     4a4:	cf 92       	push	r12
     4a6:	df 92       	push	r13
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	cf 93       	push	r28
     4b0:	df 93       	push	r29
     4b2:	ec 01       	movw	r28, r24
     4b4:	fc 01       	movw	r30, r24
     4b6:	37 96       	adiw	r30, 0x07	; 7
     4b8:	81 2c       	mov	r8, r1
     4ba:	99 24       	eor	r9, r9
     4bc:	93 94       	inc	r9
     4be:	df 01       	movw	r26, r30
     4c0:	c4 01       	movw	r24, r8
     4c2:	1d 92       	st	X+, r1
     4c4:	01 97       	sbiw	r24, 0x01	; 1
     4c6:	e9 f7       	brne	.-6      	; 0x4c2 <Kernel_Create_Task_At+0x26>
     4c8:	e1 50       	subi	r30, 0x01	; 1
     4ca:	ff 4f       	sbci	r31, 0xFF	; 255
     4cc:	80 e5       	ldi	r24, 0x50	; 80
     4ce:	91 e0       	ldi	r25, 0x01	; 1
     4d0:	80 83       	st	Z, r24
     4d2:	31 97       	sbiw	r30, 0x01	; 1
     4d4:	90 83       	st	Z, r25
     4d6:	31 97       	sbiw	r30, 0x01	; 1
     4d8:	10 82       	st	Z, r1
     4da:	31 97       	sbiw	r30, 0x01	; 1
     4dc:	60 83       	st	Z, r22
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	70 83       	st	Z, r23
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	10 82       	st	Z, r1
     4e6:	de 01       	movw	r26, r28
     4e8:	a2 52       	subi	r26, 0x22	; 34
     4ea:	bf 4f       	sbci	r27, 0xFF	; 255
     4ec:	b2 97       	sbiw	r30, 0x22	; 34
     4ee:	80 81       	ld	r24, Z
     4f0:	80 68       	ori	r24, 0x80	; 128
     4f2:	80 83       	st	Z, r24
     4f4:	be 83       	std	Y+6, r27	; 0x06
     4f6:	ad 83       	std	Y+5, r26	; 0x05
     4f8:	b9 96       	adiw	r30, 0x29	; 41
     4fa:	71 83       	std	Z+1, r23	; 0x01
     4fc:	60 83       	st	Z, r22
     4fe:	32 96       	adiw	r30, 0x02	; 2
     500:	10 82       	st	Z, r1
     502:	9d 96       	adiw	r26, 0x2d	; 45
     504:	11 96       	adiw	r26, 0x01	; 1
     506:	5c 93       	st	X, r21
     508:	4e 93       	st	-X, r20
     50a:	39 83       	std	Y+1, r19	; 0x01
     50c:	28 83       	st	Y, r18
     50e:	0a 83       	std	Y+2, r16	; 0x02
     510:	10 82       	st	Z, r1
     512:	39 96       	adiw	r30, 0x09	; 9
     514:	f1 82       	std	Z+1, r15	; 0x01
     516:	e0 82       	st	Z, r14
     518:	32 96       	adiw	r30, 0x02	; 2
     51a:	d1 82       	std	Z+1, r13	; 0x01
     51c:	c0 82       	st	Z, r12
     51e:	32 96       	adiw	r30, 0x02	; 2
     520:	b1 82       	std	Z+1, r11	; 0x01
     522:	a0 82       	st	Z, r10
     524:	32 96       	adiw	r30, 0x02	; 2
     526:	b1 82       	std	Z+1, r11	; 0x01
     528:	a0 82       	st	Z, r10
     52a:	32 96       	adiw	r30, 0x02	; 2
     52c:	11 82       	std	Z+1, r1	; 0x01
     52e:	10 82       	st	Z, r1
     530:	01 30       	cpi	r16, 0x01	; 1
     532:	21 f4       	brne	.+8      	; 0x53c <Kernel_Create_Task_At+0xa0>
     534:	84 e0       	ldi	r24, 0x04	; 4
     536:	74 97       	sbiw	r30, 0x14	; 20
     538:	80 83       	st	Z, r24
     53a:	02 c0       	rjmp	.+4      	; 0x540 <Kernel_Create_Task_At+0xa4>
     53c:	ce 01       	movw	r24, r28
     53e:	7d df       	rcall	.-262    	; 0x43a <setReady>
     540:	88 81       	ld	r24, Y
     542:	99 81       	ldd	r25, Y+1	; 0x01
     544:	df 91       	pop	r29
     546:	cf 91       	pop	r28
     548:	0f 91       	pop	r16
     54a:	ff 90       	pop	r15
     54c:	ef 90       	pop	r14
     54e:	df 90       	pop	r13
     550:	cf 90       	pop	r12
     552:	bf 90       	pop	r11
     554:	af 90       	pop	r10
     556:	9f 90       	pop	r9
     558:	8f 90       	pop	r8
     55a:	08 95       	ret

0000055c <Kernel_Create_Task>:
     55c:	af 92       	push	r10
     55e:	bf 92       	push	r11
     560:	cf 92       	push	r12
     562:	df 92       	push	r13
     564:	ef 92       	push	r14
     566:	ff 92       	push	r15
     568:	0f 93       	push	r16
     56a:	1f 93       	push	r17
     56c:	cf 93       	push	r28
     56e:	df 93       	push	r29
     570:	ec 01       	movw	r28, r24
     572:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     576:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     57a:	40 97       	sbiw	r24, 0x10	; 16
     57c:	99 f1       	breq	.+102    	; 0x5e4 <Kernel_Create_Task+0x88>
     57e:	80 91 5d 06 	lds	r24, 0x065D	; 0x80065d <Process+0x107>
     582:	88 23       	and	r24, r24
     584:	71 f0       	breq	.+28     	; 0x5a2 <Kernel_Create_Task+0x46>
     586:	a3 e8       	ldi	r26, 0x83	; 131
     588:	b7 e0       	ldi	r27, 0x07	; 7
     58a:	e1 e0       	ldi	r30, 0x01	; 1
     58c:	f0 e0       	ldi	r31, 0x00	; 0
     58e:	9c 91       	ld	r25, X
     590:	99 23       	and	r25, r25
     592:	49 f0       	breq	.+18     	; 0x5a6 <Kernel_Create_Task+0x4a>
     594:	31 96       	adiw	r30, 0x01	; 1
     596:	aa 5d       	subi	r26, 0xDA	; 218
     598:	be 4f       	sbci	r27, 0xFE	; 254
     59a:	e0 31       	cpi	r30, 0x10	; 16
     59c:	f1 05       	cpc	r31, r1
     59e:	b9 f7       	brne	.-18     	; 0x58e <Kernel_Create_Task+0x32>
     5a0:	02 c0       	rjmp	.+4      	; 0x5a6 <Kernel_Create_Task+0x4a>
     5a2:	e0 e0       	ldi	r30, 0x00	; 0
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	57 01       	movw	r10, r14
     5a8:	68 01       	movw	r12, r16
     5aa:	79 01       	movw	r14, r18
     5ac:	04 2f       	mov	r16, r20
     5ae:	ab 01       	movw	r20, r22
     5b0:	be 01       	movw	r22, r28
     5b2:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     5b6:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     5ba:	01 96       	adiw	r24, 0x01	; 1
     5bc:	90 93 b5 04 	sts	0x04B5, r25	; 0x8004b5 <Tasks+0x1>
     5c0:	80 93 b4 04 	sts	0x04B4, r24	; 0x8004b4 <Tasks>
     5c4:	9f 01       	movw	r18, r30
     5c6:	2f 5f       	subi	r18, 0xFF	; 255
     5c8:	3f 4f       	sbci	r19, 0xFF	; 255
     5ca:	a6 e2       	ldi	r26, 0x26	; 38
     5cc:	b1 e0       	ldi	r27, 0x01	; 1
     5ce:	ea 9f       	mul	r30, r26
     5d0:	c0 01       	movw	r24, r0
     5d2:	eb 9f       	mul	r30, r27
     5d4:	90 0d       	add	r25, r0
     5d6:	fa 9f       	mul	r31, r26
     5d8:	90 0d       	add	r25, r0
     5da:	11 24       	eor	r1, r1
     5dc:	8a 5a       	subi	r24, 0xAA	; 170
     5de:	9a 4f       	sbci	r25, 0xFA	; 250
     5e0:	5d df       	rcall	.-326    	; 0x49c <Kernel_Create_Task_At>
     5e2:	02 c0       	rjmp	.+4      	; 0x5e8 <Kernel_Create_Task+0x8c>
     5e4:	80 e0       	ldi	r24, 0x00	; 0
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	df 91       	pop	r29
     5ea:	cf 91       	pop	r28
     5ec:	1f 91       	pop	r17
     5ee:	0f 91       	pop	r16
     5f0:	ff 90       	pop	r15
     5f2:	ef 90       	pop	r14
     5f4:	df 90       	pop	r13
     5f6:	cf 90       	pop	r12
     5f8:	bf 90       	pop	r11
     5fa:	af 90       	pop	r10
     5fc:	08 95       	ret

000005fe <Kernel_Chan_Init>:
     5fe:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <chanCount>
     602:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <chanCount+0x1>
     606:	40 97       	sbiw	r24, 0x10	; 16
     608:	18 f0       	brcs	.+6      	; 0x610 <Kernel_Chan_Init+0x12>
     60a:	82 e0       	ldi	r24, 0x02	; 2
     60c:	88 b9       	out	0x08, r24	; 8
     60e:	ff cf       	rjmp	.-2      	; 0x60e <Kernel_Chan_Init+0x10>
     610:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <chanCount>
     614:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <chanCount+0x1>
     618:	8b e2       	ldi	r24, 0x2B	; 43
     61a:	82 9f       	mul	r24, r18
     61c:	f0 01       	movw	r30, r0
     61e:	83 9f       	mul	r24, r19
     620:	f0 0d       	add	r31, r0
     622:	11 24       	eor	r1, r1
     624:	ec 5f       	subi	r30, 0xFC	; 252
     626:	fd 4f       	sbci	r31, 0xFD	; 253
     628:	91 e0       	ldi	r25, 0x01	; 1
     62a:	90 83       	st	Z, r25
     62c:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <chanCount>
     630:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <chanCount+0x1>
     634:	82 9f       	mul	r24, r18
     636:	f0 01       	movw	r30, r0
     638:	83 9f       	mul	r24, r19
     63a:	f0 0d       	add	r31, r0
     63c:	11 24       	eor	r1, r1
     63e:	ec 5f       	subi	r30, 0xFC	; 252
     640:	fd 4f       	sbci	r31, 0xFD	; 253
     642:	14 a2       	std	Z+36, r1	; 0x24
     644:	13 a2       	std	Z+35, r1	; 0x23
     646:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <chanCount>
     64a:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <chanCount+0x1>
     64e:	82 9f       	mul	r24, r18
     650:	f0 01       	movw	r30, r0
     652:	83 9f       	mul	r24, r19
     654:	f0 0d       	add	r31, r0
     656:	11 24       	eor	r1, r1
     658:	ec 5f       	subi	r30, 0xFC	; 252
     65a:	fd 4f       	sbci	r31, 0xFD	; 253
     65c:	16 a2       	std	Z+38, r1	; 0x26
     65e:	15 a2       	std	Z+37, r1	; 0x25
     660:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <chanCount>
     664:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <chanCount+0x1>
     668:	82 9f       	mul	r24, r18
     66a:	f0 01       	movw	r30, r0
     66c:	83 9f       	mul	r24, r19
     66e:	f0 0d       	add	r31, r0
     670:	11 24       	eor	r1, r1
     672:	ec 5f       	subi	r30, 0xFC	; 252
     674:	fd 4f       	sbci	r31, 0xFD	; 253
     676:	10 a6       	std	Z+40, r1	; 0x28
     678:	17 a2       	std	Z+39, r1	; 0x27
     67a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <chanCount>
     67e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <chanCount+0x1>
     682:	01 96       	adiw	r24, 0x01	; 1
     684:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <chanCount+0x1>
     688:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <chanCount>
     68c:	08 95       	ret

0000068e <Kernel_Chan_Send>:
     68e:	af 92       	push	r10
     690:	bf 92       	push	r11
     692:	cf 92       	push	r12
     694:	df 92       	push	r13
     696:	ef 92       	push	r14
     698:	ff 92       	push	r15
     69a:	0f 93       	push	r16
     69c:	1f 93       	push	r17
     69e:	cf 93       	push	r28
     6a0:	df 93       	push	r29
     6a2:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     6a6:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     6aa:	82 81       	ldd	r24, Z+2	; 0x02
     6ac:	81 30       	cpi	r24, 0x01	; 1
     6ae:	19 f4       	brne	.+6      	; 0x6b6 <Kernel_Chan_Send+0x28>
     6b0:	83 e0       	ldi	r24, 0x03	; 3
     6b2:	88 b9       	out	0x08, r24	; 8
     6b4:	ff cf       	rjmp	.-2      	; 0x6b4 <Kernel_Chan_Send+0x26>
     6b6:	df 01       	movw	r26, r30
     6b8:	a1 5f       	subi	r26, 0xF1	; 241
     6ba:	be 4f       	sbci	r27, 0xFE	; 254
     6bc:	ad 90       	ld	r10, X+
     6be:	bc 90       	ld	r11, X
     6c0:	21 e0       	ldi	r18, 0x01	; 1
     6c2:	a2 1a       	sub	r10, r18
     6c4:	b1 08       	sbc	r11, r1
     6c6:	8b e2       	ldi	r24, 0x2B	; 43
     6c8:	8a 9d       	mul	r24, r10
     6ca:	d0 01       	movw	r26, r0
     6cc:	8b 9d       	mul	r24, r11
     6ce:	b0 0d       	add	r27, r0
     6d0:	11 24       	eor	r1, r1
     6d2:	ac 5f       	subi	r26, 0xFC	; 252
     6d4:	bd 4f       	sbci	r27, 0xFD	; 253
     6d6:	8c 91       	ld	r24, X
     6d8:	81 11       	cpse	r24, r1
     6da:	03 c0       	rjmp	.+6      	; 0x6e2 <Kernel_Chan_Send+0x54>
     6dc:	82 e0       	ldi	r24, 0x02	; 2
     6de:	88 b9       	out	0x08, r24	; 8
     6e0:	ff cf       	rjmp	.-2      	; 0x6e0 <Kernel_Chan_Send+0x52>
     6e2:	82 30       	cpi	r24, 0x02	; 2
     6e4:	19 f4       	brne	.+6      	; 0x6ec <Kernel_Chan_Send+0x5e>
     6e6:	84 e0       	ldi	r24, 0x04	; 4
     6e8:	88 b9       	out	0x08, r24	; 8
     6ea:	ff cf       	rjmp	.-2      	; 0x6ea <Kernel_Chan_Send+0x5c>
     6ec:	df 01       	movw	r26, r30
     6ee:	af 5e       	subi	r26, 0xEF	; 239
     6f0:	be 4f       	sbci	r27, 0xFE	; 254
     6f2:	2d 91       	ld	r18, X+
     6f4:	3c 91       	ld	r19, X
     6f6:	9b e2       	ldi	r25, 0x2B	; 43
     6f8:	9a 9d       	mul	r25, r10
     6fa:	d0 01       	movw	r26, r0
     6fc:	9b 9d       	mul	r25, r11
     6fe:	b0 0d       	add	r27, r0
     700:	11 24       	eor	r1, r1
     702:	ac 5f       	subi	r26, 0xFC	; 252
     704:	bd 4f       	sbci	r27, 0xFD	; 253
     706:	9a 96       	adiw	r26, 0x2a	; 42
     708:	3c 93       	st	X, r19
     70a:	2e 93       	st	-X, r18
     70c:	99 97       	sbiw	r26, 0x29	; 41
     70e:	83 30       	cpi	r24, 0x03	; 3
     710:	09 f0       	breq	.+2      	; 0x714 <Kernel_Chan_Send+0x86>
     712:	3e c0       	rjmp	.+124    	; 0x790 <Kernel_Chan_Send+0x102>
     714:	19 c0       	rjmp	.+50     	; 0x748 <Kernel_Chan_Send+0xba>
     716:	c8 01       	movw	r24, r16
     718:	fe dd       	rcall	.-1028   	; 0x316 <dequeue>
     71a:	ec 01       	movw	r28, r24
     71c:	f7 01       	movw	r30, r14
     71e:	80 81       	ld	r24, Z
     720:	91 81       	ldd	r25, Z+1	; 0x01
     722:	fe 01       	movw	r30, r28
     724:	e3 5f       	subi	r30, 0xF3	; 243
     726:	fe 4f       	sbci	r31, 0xFE	; 254
     728:	91 83       	std	Z+1, r25	; 0x01
     72a:	80 83       	st	Z, r24
     72c:	ce 01       	movw	r24, r28
     72e:	85 de       	rcall	.-758    	; 0x43a <setReady>
     730:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     734:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     738:	82 81       	ldd	r24, Z+2	; 0x02
     73a:	9a 81       	ldd	r25, Y+2	; 0x02
     73c:	98 17       	cp	r25, r24
     73e:	b8 f4       	brcc	.+46     	; 0x76e <Kernel_Chan_Send+0xe0>
     740:	cf 01       	movw	r24, r30
     742:	7b de       	rcall	.-778    	; 0x43a <setReady>
     744:	0f de       	rcall	.-994    	; 0x364 <Dispatch>
     746:	13 c0       	rjmp	.+38     	; 0x76e <Kernel_Chan_Send+0xe0>
     748:	8b e2       	ldi	r24, 0x2B	; 43
     74a:	8a 9d       	mul	r24, r10
     74c:	80 01       	movw	r16, r0
     74e:	8b 9d       	mul	r24, r11
     750:	10 0d       	add	r17, r0
     752:	11 24       	eor	r1, r1
     754:	c8 01       	movw	r24, r16
     756:	8c 5f       	subi	r24, 0xFC	; 252
     758:	9d 4f       	sbci	r25, 0xFD	; 253
     75a:	6c 01       	movw	r12, r24
     75c:	f3 e2       	ldi	r31, 0x23	; 35
     75e:	cf 0e       	add	r12, r31
     760:	d1 1c       	adc	r13, r1
     762:	7c 01       	movw	r14, r24
     764:	29 e2       	ldi	r18, 0x29	; 41
     766:	e2 0e       	add	r14, r18
     768:	f1 1c       	adc	r15, r1
     76a:	09 5f       	subi	r16, 0xF9	; 249
     76c:	1d 4f       	sbci	r17, 0xFD	; 253
     76e:	f6 01       	movw	r30, r12
     770:	80 81       	ld	r24, Z
     772:	91 81       	ldd	r25, Z+1	; 0x01
     774:	18 16       	cp	r1, r24
     776:	19 06       	cpc	r1, r25
     778:	74 f2       	brlt	.-100    	; 0x716 <Kernel_Chan_Send+0x88>
     77a:	8b e2       	ldi	r24, 0x2B	; 43
     77c:	8a 9d       	mul	r24, r10
     77e:	f0 01       	movw	r30, r0
     780:	8b 9d       	mul	r24, r11
     782:	f0 0d       	add	r31, r0
     784:	11 24       	eor	r1, r1
     786:	ec 5f       	subi	r30, 0xFC	; 252
     788:	fd 4f       	sbci	r31, 0xFD	; 253
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	80 83       	st	Z, r24
     78e:	12 c0       	rjmp	.+36     	; 0x7b4 <Kernel_Chan_Send+0x126>
     790:	8b e2       	ldi	r24, 0x2B	; 43
     792:	8a 9d       	mul	r24, r10
     794:	d0 01       	movw	r26, r0
     796:	8b 9d       	mul	r24, r11
     798:	b0 0d       	add	r27, r0
     79a:	11 24       	eor	r1, r1
     79c:	ac 5f       	subi	r26, 0xFC	; 252
     79e:	bd 4f       	sbci	r27, 0xFD	; 253
     7a0:	82 e0       	ldi	r24, 0x02	; 2
     7a2:	8c 93       	st	X, r24
     7a4:	12 96       	adiw	r26, 0x02	; 2
     7a6:	fc 93       	st	X, r31
     7a8:	ee 93       	st	-X, r30
     7aa:	11 97       	sbiw	r26, 0x01	; 1
     7ac:	e9 5f       	subi	r30, 0xF9	; 249
     7ae:	fe 4f       	sbci	r31, 0xFE	; 254
     7b0:	83 e0       	ldi	r24, 0x03	; 3
     7b2:	80 83       	st	Z, r24
     7b4:	df 91       	pop	r29
     7b6:	cf 91       	pop	r28
     7b8:	1f 91       	pop	r17
     7ba:	0f 91       	pop	r16
     7bc:	ff 90       	pop	r15
     7be:	ef 90       	pop	r14
     7c0:	df 90       	pop	r13
     7c2:	cf 90       	pop	r12
     7c4:	bf 90       	pop	r11
     7c6:	af 90       	pop	r10
     7c8:	08 95       	ret

000007ca <Kernel_Chan_Receive>:
     7ca:	ef 92       	push	r14
     7cc:	ff 92       	push	r15
     7ce:	0f 93       	push	r16
     7d0:	1f 93       	push	r17
     7d2:	cf 93       	push	r28
     7d4:	df 93       	push	r29
     7d6:	c0 91 ba 04 	lds	r28, 0x04BA	; 0x8004ba <Cp>
     7da:	d0 91 bb 04 	lds	r29, 0x04BB	; 0x8004bb <Cp+0x1>
     7de:	8a 81       	ldd	r24, Y+2	; 0x02
     7e0:	81 30       	cpi	r24, 0x01	; 1
     7e2:	19 f4       	brne	.+6      	; 0x7ea <Kernel_Chan_Receive+0x20>
     7e4:	83 e0       	ldi	r24, 0x03	; 3
     7e6:	88 b9       	out	0x08, r24	; 8
     7e8:	ff cf       	rjmp	.-2      	; 0x7e8 <Kernel_Chan_Receive+0x1e>
     7ea:	fe 01       	movw	r30, r28
     7ec:	e1 5f       	subi	r30, 0xF1	; 241
     7ee:	fe 4f       	sbci	r31, 0xFE	; 254
     7f0:	00 81       	ld	r16, Z
     7f2:	11 81       	ldd	r17, Z+1	; 0x01
     7f4:	01 50       	subi	r16, 0x01	; 1
     7f6:	11 09       	sbc	r17, r1
     7f8:	8b e2       	ldi	r24, 0x2B	; 43
     7fa:	80 9f       	mul	r24, r16
     7fc:	f0 01       	movw	r30, r0
     7fe:	81 9f       	mul	r24, r17
     800:	f0 0d       	add	r31, r0
     802:	11 24       	eor	r1, r1
     804:	ec 5f       	subi	r30, 0xFC	; 252
     806:	fd 4f       	sbci	r31, 0xFD	; 253
     808:	80 81       	ld	r24, Z
     80a:	81 11       	cpse	r24, r1
     80c:	03 c0       	rjmp	.+6      	; 0x814 <Kernel_Chan_Receive+0x4a>
     80e:	82 e0       	ldi	r24, 0x02	; 2
     810:	88 b9       	out	0x08, r24	; 8
     812:	ff cf       	rjmp	.-2      	; 0x812 <Kernel_Chan_Receive+0x48>
     814:	82 30       	cpi	r24, 0x02	; 2
     816:	91 f5       	brne	.+100    	; 0x87c <Kernel_Chan_Receive+0xb2>
     818:	2b e2       	ldi	r18, 0x2B	; 43
     81a:	20 9f       	mul	r18, r16
     81c:	c0 01       	movw	r24, r0
     81e:	21 9f       	mul	r18, r17
     820:	90 0d       	add	r25, r0
     822:	11 24       	eor	r1, r1
     824:	9c 01       	movw	r18, r24
     826:	2c 5f       	subi	r18, 0xFC	; 252
     828:	3d 4f       	sbci	r19, 0xFD	; 253
     82a:	79 01       	movw	r14, r18
     82c:	d9 01       	movw	r26, r18
     82e:	99 96       	adiw	r26, 0x29	; 41
     830:	8d 91       	ld	r24, X+
     832:	9c 91       	ld	r25, X
     834:	9a 97       	sbiw	r26, 0x2a	; 42
     836:	fe 01       	movw	r30, r28
     838:	e3 5f       	subi	r30, 0xF3	; 243
     83a:	fe 4f       	sbci	r31, 0xFE	; 254
     83c:	91 83       	std	Z+1, r25	; 0x01
     83e:	80 83       	st	Z, r24
     840:	11 96       	adiw	r26, 0x01	; 1
     842:	8d 91       	ld	r24, X+
     844:	9c 91       	ld	r25, X
     846:	12 97       	sbiw	r26, 0x02	; 2
     848:	f8 dd       	rcall	.-1040   	; 0x43a <setReady>
     84a:	8a 81       	ldd	r24, Y+2	; 0x02
     84c:	d7 01       	movw	r26, r14
     84e:	11 96       	adiw	r26, 0x01	; 1
     850:	ed 91       	ld	r30, X+
     852:	fc 91       	ld	r31, X
     854:	12 97       	sbiw	r26, 0x02	; 2
     856:	92 81       	ldd	r25, Z+2	; 0x02
     858:	98 17       	cp	r25, r24
     85a:	18 f4       	brcc	.+6      	; 0x862 <Kernel_Chan_Receive+0x98>
     85c:	ce 01       	movw	r24, r28
     85e:	ed dd       	rcall	.-1062   	; 0x43a <setReady>
     860:	81 dd       	rcall	.-1278   	; 0x364 <Dispatch>
     862:	8b e2       	ldi	r24, 0x2B	; 43
     864:	80 9f       	mul	r24, r16
     866:	f0 01       	movw	r30, r0
     868:	81 9f       	mul	r24, r17
     86a:	f0 0d       	add	r31, r0
     86c:	11 24       	eor	r1, r1
     86e:	ec 5f       	subi	r30, 0xFC	; 252
     870:	fd 4f       	sbci	r31, 0xFD	; 253
     872:	12 82       	std	Z+2, r1	; 0x02
     874:	11 82       	std	Z+1, r1	; 0x01
     876:	81 e0       	ldi	r24, 0x01	; 1
     878:	80 83       	st	Z, r24
     87a:	13 c0       	rjmp	.+38     	; 0x8a2 <Kernel_Chan_Receive+0xd8>
     87c:	8b e2       	ldi	r24, 0x2B	; 43
     87e:	80 9f       	mul	r24, r16
     880:	70 01       	movw	r14, r0
     882:	81 9f       	mul	r24, r17
     884:	f0 0c       	add	r15, r0
     886:	11 24       	eor	r1, r1
     888:	be 01       	movw	r22, r28
     88a:	c7 01       	movw	r24, r14
     88c:	89 5f       	subi	r24, 0xF9	; 249
     88e:	9d 4f       	sbci	r25, 0xFD	; 253
     890:	1b dd       	rcall	.-1482   	; 0x2c8 <enqueue>
     892:	f7 01       	movw	r30, r14
     894:	ec 5f       	subi	r30, 0xFC	; 252
     896:	fd 4f       	sbci	r31, 0xFD	; 253
     898:	83 e0       	ldi	r24, 0x03	; 3
     89a:	80 83       	st	Z, r24
     89c:	c9 5f       	subi	r28, 0xF9	; 249
     89e:	de 4f       	sbci	r29, 0xFE	; 254
     8a0:	88 83       	st	Y, r24
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	1f 91       	pop	r17
     8a8:	0f 91       	pop	r16
     8aa:	ff 90       	pop	r15
     8ac:	ef 90       	pop	r14
     8ae:	08 95       	ret

000008b0 <Kernel_Chan_Write>:
     8b0:	af 92       	push	r10
     8b2:	bf 92       	push	r11
     8b4:	cf 92       	push	r12
     8b6:	df 92       	push	r13
     8b8:	ef 92       	push	r14
     8ba:	ff 92       	push	r15
     8bc:	0f 93       	push	r16
     8be:	1f 93       	push	r17
     8c0:	cf 93       	push	r28
     8c2:	df 93       	push	r29
     8c4:	20 91 ba 04 	lds	r18, 0x04BA	; 0x8004ba <Cp>
     8c8:	30 91 bb 04 	lds	r19, 0x04BB	; 0x8004bb <Cp+0x1>
     8cc:	f9 01       	movw	r30, r18
     8ce:	e1 5f       	subi	r30, 0xF1	; 241
     8d0:	fe 4f       	sbci	r31, 0xFE	; 254
     8d2:	a0 80       	ld	r10, Z
     8d4:	b1 80       	ldd	r11, Z+1	; 0x01
     8d6:	81 e0       	ldi	r24, 0x01	; 1
     8d8:	a8 1a       	sub	r10, r24
     8da:	b1 08       	sbc	r11, r1
     8dc:	8b e2       	ldi	r24, 0x2B	; 43
     8de:	8a 9d       	mul	r24, r10
     8e0:	f0 01       	movw	r30, r0
     8e2:	8b 9d       	mul	r24, r11
     8e4:	f0 0d       	add	r31, r0
     8e6:	11 24       	eor	r1, r1
     8e8:	ec 5f       	subi	r30, 0xFC	; 252
     8ea:	fd 4f       	sbci	r31, 0xFD	; 253
     8ec:	80 81       	ld	r24, Z
     8ee:	81 11       	cpse	r24, r1
     8f0:	03 c0       	rjmp	.+6      	; 0x8f8 <Kernel_Chan_Write+0x48>
     8f2:	82 e0       	ldi	r24, 0x02	; 2
     8f4:	88 b9       	out	0x08, r24	; 8
     8f6:	ff cf       	rjmp	.-2      	; 0x8f6 <Kernel_Chan_Write+0x46>
     8f8:	82 30       	cpi	r24, 0x02	; 2
     8fa:	19 f4       	brne	.+6      	; 0x902 <Kernel_Chan_Write+0x52>
     8fc:	84 e0       	ldi	r24, 0x04	; 4
     8fe:	88 b9       	out	0x08, r24	; 8
     900:	ff cf       	rjmp	.-2      	; 0x900 <Kernel_Chan_Write+0x50>
     902:	83 30       	cpi	r24, 0x03	; 3
     904:	09 f0       	breq	.+2      	; 0x908 <Kernel_Chan_Write+0x58>
     906:	49 c0       	rjmp	.+146    	; 0x99a <Kernel_Chan_Write+0xea>
     908:	f9 01       	movw	r30, r18
     90a:	ef 5e       	subi	r30, 0xEF	; 239
     90c:	fe 4f       	sbci	r31, 0xFE	; 254
     90e:	80 81       	ld	r24, Z
     910:	91 81       	ldd	r25, Z+1	; 0x01
     912:	2b e2       	ldi	r18, 0x2B	; 43
     914:	2a 9d       	mul	r18, r10
     916:	f0 01       	movw	r30, r0
     918:	2b 9d       	mul	r18, r11
     91a:	f0 0d       	add	r31, r0
     91c:	11 24       	eor	r1, r1
     91e:	ec 5f       	subi	r30, 0xFC	; 252
     920:	fd 4f       	sbci	r31, 0xFD	; 253
     922:	92 a7       	std	Z+42, r25	; 0x2a
     924:	81 a7       	std	Z+41, r24	; 0x29
     926:	8b e2       	ldi	r24, 0x2B	; 43
     928:	8a 9d       	mul	r24, r10
     92a:	80 01       	movw	r16, r0
     92c:	8b 9d       	mul	r24, r11
     92e:	10 0d       	add	r17, r0
     930:	11 24       	eor	r1, r1
     932:	cf 01       	movw	r24, r30
     934:	6f 01       	movw	r12, r30
     936:	e3 e2       	ldi	r30, 0x23	; 35
     938:	ce 0e       	add	r12, r30
     93a:	d1 1c       	adc	r13, r1
     93c:	7c 01       	movw	r14, r24
     93e:	f9 e2       	ldi	r31, 0x29	; 41
     940:	ef 0e       	add	r14, r31
     942:	f1 1c       	adc	r15, r1
     944:	09 5f       	subi	r16, 0xF9	; 249
     946:	1d 4f       	sbci	r17, 0xFD	; 253
     948:	18 c0       	rjmp	.+48     	; 0x97a <Kernel_Chan_Write+0xca>
     94a:	c8 01       	movw	r24, r16
     94c:	e4 dc       	rcall	.-1592   	; 0x316 <dequeue>
     94e:	ec 01       	movw	r28, r24
     950:	f7 01       	movw	r30, r14
     952:	80 81       	ld	r24, Z
     954:	91 81       	ldd	r25, Z+1	; 0x01
     956:	fe 01       	movw	r30, r28
     958:	e3 5f       	subi	r30, 0xF3	; 243
     95a:	fe 4f       	sbci	r31, 0xFE	; 254
     95c:	91 83       	std	Z+1, r25	; 0x01
     95e:	80 83       	st	Z, r24
     960:	ce 01       	movw	r24, r28
     962:	6b dd       	rcall	.-1322   	; 0x43a <setReady>
     964:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     968:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     96c:	82 81       	ldd	r24, Z+2	; 0x02
     96e:	9a 81       	ldd	r25, Y+2	; 0x02
     970:	98 17       	cp	r25, r24
     972:	18 f4       	brcc	.+6      	; 0x97a <Kernel_Chan_Write+0xca>
     974:	cf 01       	movw	r24, r30
     976:	61 dd       	rcall	.-1342   	; 0x43a <setReady>
     978:	f5 dc       	rcall	.-1558   	; 0x364 <Dispatch>
     97a:	f6 01       	movw	r30, r12
     97c:	80 81       	ld	r24, Z
     97e:	91 81       	ldd	r25, Z+1	; 0x01
     980:	18 16       	cp	r1, r24
     982:	19 06       	cpc	r1, r25
     984:	14 f3       	brlt	.-60     	; 0x94a <Kernel_Chan_Write+0x9a>
     986:	8b e2       	ldi	r24, 0x2B	; 43
     988:	8a 9d       	mul	r24, r10
     98a:	f0 01       	movw	r30, r0
     98c:	8b 9d       	mul	r24, r11
     98e:	f0 0d       	add	r31, r0
     990:	11 24       	eor	r1, r1
     992:	ec 5f       	subi	r30, 0xFC	; 252
     994:	fd 4f       	sbci	r31, 0xFD	; 253
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	80 83       	st	Z, r24
     99a:	df 91       	pop	r29
     99c:	cf 91       	pop	r28
     99e:	1f 91       	pop	r17
     9a0:	0f 91       	pop	r16
     9a2:	ff 90       	pop	r15
     9a4:	ef 90       	pop	r14
     9a6:	df 90       	pop	r13
     9a8:	cf 90       	pop	r12
     9aa:	bf 90       	pop	r11
     9ac:	af 90       	pop	r10
     9ae:	08 95       	ret

000009b0 <OS_Init>:
     9b0:	10 92 b5 04 	sts	0x04B5, r1	; 0x8004b5 <Tasks+0x1>
     9b4:	10 92 b4 04 	sts	0x04B4, r1	; 0x8004b4 <Tasks>
     9b8:	10 92 b7 04 	sts	0x04B7, r1	; 0x8004b7 <KernelActive+0x1>
     9bc:	10 92 b6 04 	sts	0x04B6, r1	; 0x8004b6 <KernelActive>
     9c0:	10 92 b9 04 	sts	0x04B9, r1	; 0x8004b9 <NextP+0x1>
     9c4:	10 92 b8 04 	sts	0x04B8, r1	; 0x8004b8 <NextP>
     9c8:	e6 e5       	ldi	r30, 0x56	; 86
     9ca:	f5 e0       	ldi	r31, 0x05	; 5
     9cc:	26 eb       	ldi	r18, 0xB6	; 182
     9ce:	37 e1       	ldi	r19, 0x17	; 23
     9d0:	86 e2       	ldi	r24, 0x26	; 38
     9d2:	91 e0       	ldi	r25, 0x01	; 1
     9d4:	df 01       	movw	r26, r30
     9d6:	ac 01       	movw	r20, r24
     9d8:	1d 92       	st	X+, r1
     9da:	41 50       	subi	r20, 0x01	; 1
     9dc:	50 40       	sbci	r21, 0x00	; 0
     9de:	e1 f7       	brne	.-8      	; 0x9d8 <OS_Init+0x28>
     9e0:	df 01       	movw	r26, r30
     9e2:	a9 5f       	subi	r26, 0xF9	; 249
     9e4:	be 4f       	sbci	r27, 0xFE	; 254
     9e6:	1c 92       	st	X, r1
     9e8:	ea 5d       	subi	r30, 0xDA	; 218
     9ea:	fe 4f       	sbci	r31, 0xFE	; 254
     9ec:	e2 17       	cp	r30, r18
     9ee:	f3 07       	cpc	r31, r19
     9f0:	89 f7       	brne	.-30     	; 0x9d4 <OS_Init+0x24>
     9f2:	10 92 03 02 	sts	0x0203, r1	; 0x800203 <chanCount+0x1>
     9f6:	10 92 02 02 	sts	0x0202, r1	; 0x800202 <chanCount>
     9fa:	e4 e0       	ldi	r30, 0x04	; 4
     9fc:	f2 e0       	ldi	r31, 0x02	; 2
     9fe:	24 eb       	ldi	r18, 0xB4	; 180
     a00:	34 e0       	ldi	r19, 0x04	; 4
     a02:	8b e2       	ldi	r24, 0x2B	; 43
     a04:	df 01       	movw	r26, r30
     a06:	48 2f       	mov	r20, r24
     a08:	1d 92       	st	X+, r1
     a0a:	4a 95       	dec	r20
     a0c:	e9 f7       	brne	.-6      	; 0xa08 <OS_Init+0x58>
     a0e:	10 82       	st	Z, r1
     a10:	bb 96       	adiw	r30, 0x2b	; 43
     a12:	e2 17       	cp	r30, r18
     a14:	f3 07       	cpc	r31, r19
     a16:	b1 f7       	brne	.-20     	; 0xa04 <OS_Init+0x54>
     a18:	08 95       	ret

00000a1a <OS_Start>:
     a1a:	af 92       	push	r10
     a1c:	bf 92       	push	r11
     a1e:	df 92       	push	r13
     a20:	ef 92       	push	r14
     a22:	ff 92       	push	r15
     a24:	0f 93       	push	r16
     a26:	1f 93       	push	r17
     a28:	cf 93       	push	r28
     a2a:	df 93       	push	r29
     a2c:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <KernelActive>
     a30:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     a34:	89 2b       	or	r24, r25
     a36:	09 f0       	breq	.+2      	; 0xa3a <OS_Start+0x20>
     a38:	9e c0       	rjmp	.+316    	; 0xb76 <OS_Start+0x15c>
     a3a:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     a3e:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     a42:	89 2b       	or	r24, r25
     a44:	09 f4       	brne	.+2      	; 0xa48 <OS_Start+0x2e>
     a46:	97 c0       	rjmp	.+302    	; 0xb76 <OS_Start+0x15c>
     a48:	f8 94       	cli
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	90 93 b7 04 	sts	0x04B7, r25	; 0x8004b7 <KernelActive+0x1>
     a52:	80 93 b6 04 	sts	0x04B6, r24	; 0x8004b6 <KernelActive>
     a56:	86 dc       	rcall	.-1780   	; 0x364 <Dispatch>
     a58:	68 94       	set
     a5a:	dd 24       	eor	r13, r13
     a5c:	d2 f8       	bld	r13, 2
     a5e:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     a62:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     a66:	df 01       	movw	r26, r30
     a68:	a6 5f       	subi	r26, 0xF6	; 246
     a6a:	be 4f       	sbci	r27, 0xFE	; 254
     a6c:	1c 92       	st	X, r1
     a6e:	85 81       	ldd	r24, Z+5	; 0x05
     a70:	96 81       	ldd	r25, Z+6	; 0x06
     a72:	90 93 b7 17 	sts	0x17B7, r25	; 0x8017b7 <CurrentSp+0x1>
     a76:	80 93 b6 17 	sts	0x17B6, r24	; 0x8017b6 <CurrentSp>
     a7a:	50 db       	rcall	.-2400   	; 0x11c <CSwitch>
     a7c:	c0 91 ba 04 	lds	r28, 0x04BA	; 0x8004ba <Cp>
     a80:	d0 91 bb 04 	lds	r29, 0x04BB	; 0x8004bb <Cp+0x1>
     a84:	80 91 b6 17 	lds	r24, 0x17B6	; 0x8017b6 <CurrentSp>
     a88:	90 91 b7 17 	lds	r25, 0x17B7	; 0x8017b7 <CurrentSp+0x1>
     a8c:	9e 83       	std	Y+6, r25	; 0x06
     a8e:	8d 83       	std	Y+5, r24	; 0x05
     a90:	fe 01       	movw	r30, r28
     a92:	e6 5f       	subi	r30, 0xF6	; 246
     a94:	fe 4f       	sbci	r31, 0xFE	; 254
     a96:	e0 81       	ld	r30, Z
     a98:	f0 e0       	ldi	r31, 0x00	; 0
     a9a:	e9 30       	cpi	r30, 0x09	; 9
     a9c:	f1 05       	cpc	r31, r1
     a9e:	f8 f6       	brcc	.-66     	; 0xa5e <OS_Start+0x44>
     aa0:	88 27       	eor	r24, r24
     aa2:	ee 58       	subi	r30, 0x8E	; 142
     aa4:	ff 4f       	sbci	r31, 0xFF	; 255
     aa6:	8f 4f       	sbci	r24, 0xFF	; 255
     aa8:	a8 c2       	rjmp	.+1360   	; 0xffa <__tablejump2__>
     aaa:	fe 01       	movw	r30, r28
     aac:	ec 5d       	subi	r30, 0xDC	; 220
     aae:	fe 4f       	sbci	r31, 0xFE	; 254
     ab0:	e0 80       	ld	r14, Z
     ab2:	f1 80       	ldd	r15, Z+1	; 0x01
     ab4:	32 97       	sbiw	r30, 0x02	; 2
     ab6:	00 81       	ld	r16, Z
     ab8:	11 81       	ldd	r17, Z+1	; 0x01
     aba:	32 97       	sbiw	r30, 0x02	; 2
     abc:	20 81       	ld	r18, Z
     abe:	31 81       	ldd	r19, Z+1	; 0x01
     ac0:	5e 01       	movw	r10, r28
     ac2:	81 ee       	ldi	r24, 0xE1	; 225
     ac4:	a8 1a       	sub	r10, r24
     ac6:	8e ef       	ldi	r24, 0xFE	; 254
     ac8:	b8 0a       	sbc	r11, r24
     aca:	f5 01       	movw	r30, r10
     acc:	40 81       	ld	r20, Z
     ace:	74 97       	sbiw	r30, 0x14	; 20
     ad0:	60 81       	ld	r22, Z
     ad2:	71 81       	ldd	r23, Z+1	; 0x01
     ad4:	33 97       	sbiw	r30, 0x03	; 3
     ad6:	80 81       	ld	r24, Z
     ad8:	91 81       	ldd	r25, Z+1	; 0x01
     ada:	40 dd       	rcall	.-1408   	; 0x55c <Kernel_Create_Task>
     adc:	f5 01       	movw	r30, r10
     ade:	80 81       	ld	r24, Z
     ae0:	82 30       	cpi	r24, 0x02	; 2
     ae2:	08 f0       	brcs	.+2      	; 0xae6 <OS_Start+0xcc>
     ae4:	bc cf       	rjmp	.-136    	; 0xa5e <OS_Start+0x44>
     ae6:	f5 01       	movw	r30, r10
     ae8:	90 81       	ld	r25, Z
     aea:	8a 81       	ldd	r24, Y+2	; 0x02
     aec:	98 17       	cp	r25, r24
     aee:	08 f0       	brcs	.+2      	; 0xaf2 <OS_Start+0xd8>
     af0:	b6 cf       	rjmp	.-148    	; 0xa5e <OS_Start+0x44>
     af2:	ce 01       	movw	r24, r28
     af4:	a2 dc       	rcall	.-1724   	; 0x43a <setReady>
     af6:	36 dc       	rcall	.-1940   	; 0x364 <Dispatch>
     af8:	b2 cf       	rjmp	.-156    	; 0xa5e <OS_Start+0x44>
     afa:	ce 01       	movw	r24, r28
     afc:	9e dc       	rcall	.-1732   	; 0x43a <setReady>
     afe:	32 dc       	rcall	.-1948   	; 0x364 <Dispatch>
     b00:	ae cf       	rjmp	.-164    	; 0xa5e <OS_Start+0x44>
     b02:	fe 01       	movw	r30, r28
     b04:	e5 5e       	subi	r30, 0xE5	; 229
     b06:	fe 4f       	sbci	r31, 0xFE	; 254
     b08:	11 82       	std	Z+1, r1	; 0x01
     b0a:	10 82       	st	Z, r1
     b0c:	c9 5f       	subi	r28, 0xF9	; 249
     b0e:	de 4f       	sbci	r29, 0xFE	; 254
     b10:	d8 82       	st	Y, r13
     b12:	28 dc       	rcall	.-1968   	; 0x364 <Dispatch>
     b14:	a4 cf       	rjmp	.-184    	; 0xa5e <OS_Start+0x44>
     b16:	c9 5f       	subi	r28, 0xF9	; 249
     b18:	de 4f       	sbci	r29, 0xFE	; 254
     b1a:	18 82       	st	Y, r1
     b1c:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     b20:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     b24:	01 97       	sbiw	r24, 0x01	; 1
     b26:	90 93 b5 04 	sts	0x04B5, r25	; 0x8004b5 <Tasks+0x1>
     b2a:	80 93 b4 04 	sts	0x04B4, r24	; 0x8004b4 <Tasks>
     b2e:	1a dc       	rcall	.-1996   	; 0x364 <Dispatch>
     b30:	96 cf       	rjmp	.-212    	; 0xa5e <OS_Start+0x44>
     b32:	65 dd       	rcall	.-1334   	; 0x5fe <Kernel_Chan_Init>
     b34:	c3 5f       	subi	r28, 0xF3	; 243
     b36:	de 4f       	sbci	r29, 0xFE	; 254
     b38:	99 83       	std	Y+1, r25	; 0x01
     b3a:	88 83       	st	Y, r24
     b3c:	90 cf       	rjmp	.-224    	; 0xa5e <OS_Start+0x44>
     b3e:	a7 dd       	rcall	.-1202   	; 0x68e <Kernel_Chan_Send>
     b40:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     b44:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     b48:	e9 5f       	subi	r30, 0xF9	; 249
     b4a:	fe 4f       	sbci	r31, 0xFE	; 254
     b4c:	80 81       	ld	r24, Z
     b4e:	83 30       	cpi	r24, 0x03	; 3
     b50:	09 f0       	breq	.+2      	; 0xb54 <OS_Start+0x13a>
     b52:	85 cf       	rjmp	.-246    	; 0xa5e <OS_Start+0x44>
     b54:	07 dc       	rcall	.-2034   	; 0x364 <Dispatch>
     b56:	83 cf       	rjmp	.-250    	; 0xa5e <OS_Start+0x44>
     b58:	38 de       	rcall	.-912    	; 0x7ca <Kernel_Chan_Receive>
     b5a:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     b5e:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     b62:	e9 5f       	subi	r30, 0xF9	; 249
     b64:	fe 4f       	sbci	r31, 0xFE	; 254
     b66:	80 81       	ld	r24, Z
     b68:	83 30       	cpi	r24, 0x03	; 3
     b6a:	09 f0       	breq	.+2      	; 0xb6e <OS_Start+0x154>
     b6c:	78 cf       	rjmp	.-272    	; 0xa5e <OS_Start+0x44>
     b6e:	fa db       	rcall	.-2060   	; 0x364 <Dispatch>
     b70:	76 cf       	rjmp	.-276    	; 0xa5e <OS_Start+0x44>
     b72:	9e de       	rcall	.-708    	; 0x8b0 <Kernel_Chan_Write>
     b74:	74 cf       	rjmp	.-280    	; 0xa5e <OS_Start+0x44>
     b76:	df 91       	pop	r29
     b78:	cf 91       	pop	r28
     b7a:	1f 91       	pop	r17
     b7c:	0f 91       	pop	r16
     b7e:	ff 90       	pop	r15
     b80:	ef 90       	pop	r14
     b82:	df 90       	pop	r13
     b84:	bf 90       	pop	r11
     b86:	af 90       	pop	r10
     b88:	08 95       	ret

00000b8a <Task_Create_WRR>:
     b8a:	ef 92       	push	r14
     b8c:	ff 92       	push	r15
     b8e:	0f 93       	push	r16
     b90:	1f 93       	push	r17
     b92:	20 91 b6 04 	lds	r18, 0x04B6	; 0x8004b6 <KernelActive>
     b96:	30 91 b7 04 	lds	r19, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     b9a:	23 2b       	or	r18, r19
     b9c:	09 f1       	breq	.+66     	; 0xbe0 <Task_Create_WRR+0x56>
     b9e:	f8 94       	cli
     ba0:	20 91 ba 04 	lds	r18, 0x04BA	; 0x8004ba <Cp>
     ba4:	30 91 bb 04 	lds	r19, 0x04BB	; 0x8004bb <Cp+0x1>
     ba8:	f9 01       	movw	r30, r18
     baa:	e6 5f       	subi	r30, 0xF6	; 246
     bac:	fe 4f       	sbci	r31, 0xFE	; 254
     bae:	61 e0       	ldi	r22, 0x01	; 1
     bb0:	60 83       	st	Z, r22
     bb2:	32 97       	sbiw	r30, 0x02	; 2
     bb4:	91 83       	std	Z+1, r25	; 0x01
     bb6:	80 83       	st	Z, r24
     bb8:	33 96       	adiw	r30, 0x03	; 3
     bba:	51 83       	std	Z+1, r21	; 0x01
     bbc:	40 83       	st	Z, r20
     bbe:	74 96       	adiw	r30, 0x14	; 20
     bc0:	82 e0       	ldi	r24, 0x02	; 2
     bc2:	80 83       	st	Z, r24
     bc4:	31 96       	adiw	r30, 0x01	; 1
     bc6:	11 82       	std	Z+1, r1	; 0x01
     bc8:	10 82       	st	Z, r1
     bca:	32 96       	adiw	r30, 0x02	; 2
     bcc:	11 82       	std	Z+1, r1	; 0x01
     bce:	10 82       	st	Z, r1
     bd0:	32 96       	adiw	r30, 0x02	; 2
     bd2:	11 82       	std	Z+1, r1	; 0x01
     bd4:	10 82       	st	Z, r1
     bd6:	80 e1       	ldi	r24, 0x10	; 16
     bd8:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     bdc:	f4 da       	rcall	.-2584   	; 0x1c6 <Enter_Kernel>
     bde:	08 c0       	rjmp	.+16     	; 0xbf0 <Task_Create_WRR+0x66>
     be0:	e1 2c       	mov	r14, r1
     be2:	f1 2c       	mov	r15, r1
     be4:	00 e0       	ldi	r16, 0x00	; 0
     be6:	10 e0       	ldi	r17, 0x00	; 0
     be8:	20 e0       	ldi	r18, 0x00	; 0
     bea:	30 e0       	ldi	r19, 0x00	; 0
     bec:	42 e0       	ldi	r20, 0x02	; 2
     bee:	b6 dc       	rcall	.-1684   	; 0x55c <Kernel_Create_Task>
     bf0:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     bf4:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     bf8:	1f 91       	pop	r17
     bfa:	0f 91       	pop	r16
     bfc:	ff 90       	pop	r15
     bfe:	ef 90       	pop	r14
     c00:	08 95       	ret

00000c02 <Task_Create_RR>:
     c02:	ef 92       	push	r14
     c04:	ff 92       	push	r15
     c06:	0f 93       	push	r16
     c08:	1f 93       	push	r17
     c0a:	20 91 b6 04 	lds	r18, 0x04B6	; 0x8004b6 <KernelActive>
     c0e:	30 91 b7 04 	lds	r19, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     c12:	23 2b       	or	r18, r19
     c14:	09 f1       	breq	.+66     	; 0xc58 <Task_Create_RR+0x56>
     c16:	f8 94       	cli
     c18:	20 91 ba 04 	lds	r18, 0x04BA	; 0x8004ba <Cp>
     c1c:	30 91 bb 04 	lds	r19, 0x04BB	; 0x8004bb <Cp+0x1>
     c20:	f9 01       	movw	r30, r18
     c22:	e6 5f       	subi	r30, 0xF6	; 246
     c24:	fe 4f       	sbci	r31, 0xFE	; 254
     c26:	41 e0       	ldi	r20, 0x01	; 1
     c28:	40 83       	st	Z, r20
     c2a:	32 97       	sbiw	r30, 0x02	; 2
     c2c:	91 83       	std	Z+1, r25	; 0x01
     c2e:	80 83       	st	Z, r24
     c30:	33 96       	adiw	r30, 0x03	; 3
     c32:	71 83       	std	Z+1, r23	; 0x01
     c34:	60 83       	st	Z, r22
     c36:	74 96       	adiw	r30, 0x14	; 20
     c38:	82 e0       	ldi	r24, 0x02	; 2
     c3a:	80 83       	st	Z, r24
     c3c:	31 96       	adiw	r30, 0x01	; 1
     c3e:	11 82       	std	Z+1, r1	; 0x01
     c40:	10 82       	st	Z, r1
     c42:	32 96       	adiw	r30, 0x02	; 2
     c44:	11 82       	std	Z+1, r1	; 0x01
     c46:	10 82       	st	Z, r1
     c48:	32 96       	adiw	r30, 0x02	; 2
     c4a:	11 82       	std	Z+1, r1	; 0x01
     c4c:	10 82       	st	Z, r1
     c4e:	80 e1       	ldi	r24, 0x10	; 16
     c50:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     c54:	b8 da       	rcall	.-2704   	; 0x1c6 <Enter_Kernel>
     c56:	08 c0       	rjmp	.+16     	; 0xc68 <Task_Create_RR+0x66>
     c58:	e1 2c       	mov	r14, r1
     c5a:	f1 2c       	mov	r15, r1
     c5c:	00 e0       	ldi	r16, 0x00	; 0
     c5e:	10 e0       	ldi	r17, 0x00	; 0
     c60:	20 e0       	ldi	r18, 0x00	; 0
     c62:	30 e0       	ldi	r19, 0x00	; 0
     c64:	42 e0       	ldi	r20, 0x02	; 2
     c66:	7a dc       	rcall	.-1804   	; 0x55c <Kernel_Create_Task>
     c68:	80 91 b4 04 	lds	r24, 0x04B4	; 0x8004b4 <Tasks>
     c6c:	90 91 b5 04 	lds	r25, 0x04B5	; 0x8004b5 <Tasks+0x1>
     c70:	1f 91       	pop	r17
     c72:	0f 91       	pop	r16
     c74:	ff 90       	pop	r15
     c76:	ef 90       	pop	r14
     c78:	08 95       	ret

00000c7a <Task_Create_System>:
     c7a:	ef 92       	push	r14
     c7c:	ff 92       	push	r15
     c7e:	0f 93       	push	r16
     c80:	1f 93       	push	r17
     c82:	20 91 b6 04 	lds	r18, 0x04B6	; 0x8004b6 <KernelActive>
     c86:	30 91 b7 04 	lds	r19, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     c8a:	23 2b       	or	r18, r19
     c8c:	01 f1       	breq	.+64     	; 0xcce <Task_Create_System+0x54>
     c8e:	f8 94       	cli
     c90:	20 91 ba 04 	lds	r18, 0x04BA	; 0x8004ba <Cp>
     c94:	30 91 bb 04 	lds	r19, 0x04BB	; 0x8004bb <Cp+0x1>
     c98:	f9 01       	movw	r30, r18
     c9a:	e6 5f       	subi	r30, 0xF6	; 246
     c9c:	fe 4f       	sbci	r31, 0xFE	; 254
     c9e:	41 e0       	ldi	r20, 0x01	; 1
     ca0:	40 83       	st	Z, r20
     ca2:	32 97       	sbiw	r30, 0x02	; 2
     ca4:	91 83       	std	Z+1, r25	; 0x01
     ca6:	80 83       	st	Z, r24
     ca8:	33 96       	adiw	r30, 0x03	; 3
     caa:	71 83       	std	Z+1, r23	; 0x01
     cac:	60 83       	st	Z, r22
     cae:	74 96       	adiw	r30, 0x14	; 20
     cb0:	10 82       	st	Z, r1
     cb2:	31 96       	adiw	r30, 0x01	; 1
     cb4:	11 82       	std	Z+1, r1	; 0x01
     cb6:	10 82       	st	Z, r1
     cb8:	32 96       	adiw	r30, 0x02	; 2
     cba:	11 82       	std	Z+1, r1	; 0x01
     cbc:	10 82       	st	Z, r1
     cbe:	32 96       	adiw	r30, 0x02	; 2
     cc0:	11 82       	std	Z+1, r1	; 0x01
     cc2:	10 82       	st	Z, r1
     cc4:	80 e1       	ldi	r24, 0x10	; 16
     cc6:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     cca:	7d da       	rcall	.-2822   	; 0x1c6 <Enter_Kernel>
     ccc:	08 c0       	rjmp	.+16     	; 0xcde <Task_Create_System+0x64>
     cce:	e1 2c       	mov	r14, r1
     cd0:	f1 2c       	mov	r15, r1
     cd2:	00 e0       	ldi	r16, 0x00	; 0
     cd4:	10 e0       	ldi	r17, 0x00	; 0
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	40 e0       	ldi	r20, 0x00	; 0
     cdc:	3f dc       	rcall	.-1922   	; 0x55c <Kernel_Create_Task>
     cde:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     ce2:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     ce6:	80 81       	ld	r24, Z
     ce8:	91 81       	ldd	r25, Z+1	; 0x01
     cea:	1f 91       	pop	r17
     cec:	0f 91       	pop	r16
     cee:	ff 90       	pop	r15
     cf0:	ef 90       	pop	r14
     cf2:	08 95       	ret

00000cf4 <Task_Create_Idle>:
     cf4:	ef 92       	push	r14
     cf6:	ff 92       	push	r15
     cf8:	0f 93       	push	r16
     cfa:	1f 93       	push	r17
     cfc:	20 91 b6 04 	lds	r18, 0x04B6	; 0x8004b6 <KernelActive>
     d00:	30 91 b7 04 	lds	r19, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     d04:	23 2b       	or	r18, r19
     d06:	29 f1       	breq	.+74     	; 0xd52 <Task_Create_Idle+0x5e>
     d08:	f8 94       	cli
     d0a:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     d0e:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     d12:	df 01       	movw	r26, r30
     d14:	a6 5f       	subi	r26, 0xF6	; 246
     d16:	be 4f       	sbci	r27, 0xFE	; 254
     d18:	21 e0       	ldi	r18, 0x01	; 1
     d1a:	2c 93       	st	X, r18
     d1c:	12 97       	sbiw	r26, 0x02	; 2
     d1e:	11 96       	adiw	r26, 0x01	; 1
     d20:	9c 93       	st	X, r25
     d22:	8e 93       	st	-X, r24
     d24:	13 96       	adiw	r26, 0x03	; 3
     d26:	11 96       	adiw	r26, 0x01	; 1
     d28:	7c 93       	st	X, r23
     d2a:	6e 93       	st	-X, r22
     d2c:	83 e0       	ldi	r24, 0x03	; 3
     d2e:	82 83       	std	Z+2, r24	; 0x02
     d30:	18 96       	adiw	r26, 0x08	; 8
     d32:	11 96       	adiw	r26, 0x01	; 1
     d34:	1c 92       	st	X, r1
     d36:	1e 92       	st	-X, r1
     d38:	12 96       	adiw	r26, 0x02	; 2
     d3a:	11 96       	adiw	r26, 0x01	; 1
     d3c:	1c 92       	st	X, r1
     d3e:	1e 92       	st	-X, r1
     d40:	e9 5e       	subi	r30, 0xE9	; 233
     d42:	fe 4f       	sbci	r31, 0xFE	; 254
     d44:	11 82       	std	Z+1, r1	; 0x01
     d46:	10 82       	st	Z, r1
     d48:	80 e1       	ldi	r24, 0x10	; 16
     d4a:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     d4e:	3b da       	rcall	.-2954   	; 0x1c6 <Enter_Kernel>
     d50:	08 c0       	rjmp	.+16     	; 0xd62 <Task_Create_Idle+0x6e>
     d52:	e1 2c       	mov	r14, r1
     d54:	f1 2c       	mov	r15, r1
     d56:	00 e0       	ldi	r16, 0x00	; 0
     d58:	10 e0       	ldi	r17, 0x00	; 0
     d5a:	20 e0       	ldi	r18, 0x00	; 0
     d5c:	30 e0       	ldi	r19, 0x00	; 0
     d5e:	43 e0       	ldi	r20, 0x03	; 3
     d60:	fd db       	rcall	.-2054   	; 0x55c <Kernel_Create_Task>
     d62:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     d66:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     d6a:	80 81       	ld	r24, Z
     d6c:	91 81       	ldd	r25, Z+1	; 0x01
     d6e:	1f 91       	pop	r17
     d70:	0f 91       	pop	r16
     d72:	ff 90       	pop	r15
     d74:	ef 90       	pop	r14
     d76:	08 95       	ret

00000d78 <Task_Next_2>:
     d78:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <KernelActive>
     d7c:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     d80:	89 2b       	or	r24, r25
     d82:	69 f0       	breq	.+26     	; 0xd9e <Task_Next_2+0x26>
     d84:	f8 94       	cli
     d86:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     d8a:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     d8e:	e6 5f       	subi	r30, 0xF6	; 246
     d90:	fe 4f       	sbci	r31, 0xFE	; 254
     d92:	82 e0       	ldi	r24, 0x02	; 2
     d94:	80 83       	st	Z, r24
     d96:	80 e1       	ldi	r24, 0x10	; 16
     d98:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     d9c:	14 ca       	rjmp	.-3032   	; 0x1c6 <Enter_Kernel>
     d9e:	08 95       	ret

00000da0 <Task_Next>:
     da0:	80 91 b6 04 	lds	r24, 0x04B6	; 0x8004b6 <KernelActive>
     da4:	90 91 b7 04 	lds	r25, 0x04B7	; 0x8004b7 <KernelActive+0x1>
     da8:	89 2b       	or	r24, r25
     daa:	91 f0       	breq	.+36     	; 0xdd0 <Task_Next+0x30>
     dac:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     db0:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     db4:	82 81       	ldd	r24, Z+2	; 0x02
     db6:	81 30       	cpi	r24, 0x01	; 1
     db8:	11 f0       	breq	.+4      	; 0xdbe <Task_Next+0x1e>
     dba:	de cf       	rjmp	.-68     	; 0xd78 <Task_Next_2>
     dbc:	08 95       	ret
     dbe:	f8 94       	cli
     dc0:	e6 5f       	subi	r30, 0xF6	; 246
     dc2:	fe 4f       	sbci	r31, 0xFE	; 254
     dc4:	84 e0       	ldi	r24, 0x04	; 4
     dc6:	80 83       	st	Z, r24
     dc8:	80 e1       	ldi	r24, 0x10	; 16
     dca:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <__TEXT_REGION_LENGTH__+0x7c010b>
     dce:	fb c9       	rjmp	.-3082   	; 0x1c6 <Enter_Kernel>
     dd0:	08 95       	ret

00000dd2 <Timer_Init>:
  * A Simple Test
  *============
  */
void Timer_Init()
{
  Disable_Interrupt();
     dd2:	f8 94       	cli
  //Clear timer config.
  TCCR3A = 0;
     dd4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7c0090>
  TCCR3B = 0;
     dd8:	e1 e9       	ldi	r30, 0x91	; 145
     dda:	f0 e0       	ldi	r31, 0x00	; 0
     ddc:	10 82       	st	Z, r1
  //Set to CTC (mode 4)
  TCCR3B |= (1<<WGM32);
     dde:	80 81       	ld	r24, Z
     de0:	88 60       	ori	r24, 0x08	; 8
     de2:	80 83       	st	Z, r24

  //Set prescaller to 1/8
  TCCR3B |= (1<<CS31);
     de4:	80 81       	ld	r24, Z
     de6:	82 60       	ori	r24, 0x02	; 2
     de8:	80 83       	st	Z, r24

  //Set TOP value 0.0001s*MSECPERTICK
  OCR3A = 2000*MSECPERTICK;
     dea:	80 e2       	ldi	r24, 0x20	; 32
     dec:	9e e4       	ldi	r25, 0x4E	; 78
     dee:	90 93 99 00 	sts	0x0099, r25	; 0x800099 <__TEXT_REGION_LENGTH__+0x7c0099>
     df2:	80 93 98 00 	sts	0x0098, r24	; 0x800098 <__TEXT_REGION_LENGTH__+0x7c0098>

  //Enable interupt A for timer 3.
  TIMSK3 |= (1<<OCIE3A);
     df6:	e1 e7       	ldi	r30, 0x71	; 113
     df8:	f0 e0       	ldi	r31, 0x00	; 0
     dfa:	80 81       	ld	r24, Z
     dfc:	82 60       	ori	r24, 0x02	; 2
     dfe:	80 83       	st	Z, r24

  //Set timer to 0 (optional here).
  TCNT3 = 0;
     e00:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x7c0095>
     e04:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x7c0094>

  // enable interrupt
  Enable_Interrupt();
     e08:	78 94       	sei
     e0a:	08 95       	ret

00000e0c <Kernel_Tick>:
}

void Kernel_Tick()
{
     e0c:	af 92       	push	r10
     e0e:	bf 92       	push	r11
     e10:	cf 92       	push	r12
     e12:	df 92       	push	r13
     e14:	ef 92       	push	r14
     e16:	ff 92       	push	r15
     e18:	0f 93       	push	r16
     e1a:	1f 93       	push	r17
     e1c:	cf 93       	push	r28
     e1e:	df 93       	push	r29
  current_tick++;
     e20:	80 91 bc 04 	lds	r24, 0x04BC	; 0x8004bc <current_tick>
     e24:	90 91 bd 04 	lds	r25, 0x04BD	; 0x8004bd <current_tick+0x1>
     e28:	01 96       	adiw	r24, 0x01	; 1
     e2a:	90 93 bd 04 	sts	0x04BD, r25	; 0x8004bd <current_tick+0x1>
     e2e:	80 93 bc 04 	sts	0x04BC, r24	; 0x8004bc <current_tick>
     e32:	06 e5       	ldi	r16, 0x56	; 86
     e34:	15 e0       	ldi	r17, 0x05	; 5
     e36:	cd e5       	ldi	r28, 0x5D	; 93
     e38:	d6 e0       	ldi	r29, 0x06	; 6
     e3a:	0f 2e       	mov	r0, r31
     e3c:	fd eb       	ldi	r31, 0xBD	; 189
     e3e:	cf 2e       	mov	r12, r31
     e40:	f8 e1       	ldi	r31, 0x18	; 24
     e42:	df 2e       	mov	r13, r31
     e44:	f0 2d       	mov	r31, r0
  int x;
  int ready_time_tasks = 0;
     e46:	a1 2c       	mov	r10, r1
     e48:	b1 2c       	mov	r11, r1
     e4a:	78 01       	movw	r14, r16
  for (x = 0; x < MAXPROCESS; x++) {
    if (Process[x].py == TIME && Process[x].state != SUSPENDED){
     e4c:	f8 01       	movw	r30, r16
     e4e:	82 81       	ldd	r24, Z+2	; 0x02
     e50:	81 30       	cpi	r24, 0x01	; 1
     e52:	19 f5       	brne	.+70     	; 0xe9a <Kernel_Tick+0x8e>
     e54:	88 81       	ld	r24, Y
     e56:	84 30       	cpi	r24, 0x04	; 4
     e58:	71 f1       	breq	.+92     	; 0xeb6 <Kernel_Tick+0xaa>
      Process[x].executed_ticks++;
     e5a:	8c 89       	ldd	r24, Y+20	; 0x14
     e5c:	9d 89       	ldd	r25, Y+21	; 0x15
     e5e:	01 96       	adiw	r24, 0x01	; 1
     e60:	9d 8b       	std	Y+21, r25	; 0x15
     e62:	8c 8b       	std	Y+20, r24	; 0x14
      if (Process[x].executed_ticks >= Process[x].wcet){
     e64:	2e 85       	ldd	r18, Y+14	; 0x0e
     e66:	3f 85       	ldd	r19, Y+15	; 0x0f
     e68:	82 17       	cp	r24, r18
     e6a:	93 07       	cpc	r25, r19
     e6c:	58 f0       	brcs	.+22     	; 0xe84 <Kernel_Tick+0x78>

/**
  * TODO: communicate error code
  */
void OS_Abort(unsigned int error) {
	OS_ABORT_DEBUG_PORT = error;
     e6e:	86 e0       	ldi	r24, 0x06	; 6
     e70:	88 b9       	out	0x08, r24	; 8
     e72:	ff cf       	rjmp	.-2      	; 0xe72 <Kernel_Tick+0x66>
        OS_Abort(ERROR_WCET_VIOLATION);
      }
    }
    if (Process[x].state == SUSPENDED && Process[x].py == TIME && Process[x].next_schedule == current_tick)
    {
      Process[x].next_schedule = Process[x].next_schedule + Process[x].period;
     e74:	2c 85       	ldd	r18, Y+12	; 0x0c
     e76:	3d 85       	ldd	r19, Y+13	; 0x0d
     e78:	82 0f       	add	r24, r18
     e7a:	93 1f       	adc	r25, r19
     e7c:	9b 8b       	std	Y+19, r25	; 0x13
     e7e:	8a 8b       	std	Y+18, r24	; 0x12
      setReady(&Process[x]);
     e80:	c7 01       	movw	r24, r14
     e82:	db da       	rcall	.-2634   	; 0x43a <setReady>
    }
    if (Process[x].py == TIME && (Process[x].state == RUNNING || Process[x].state == READY))
     e84:	f7 01       	movw	r30, r14
     e86:	82 81       	ldd	r24, Z+2	; 0x02
     e88:	81 30       	cpi	r24, 0x01	; 1
     e8a:	39 f4       	brne	.+14     	; 0xe9a <Kernel_Tick+0x8e>
     e8c:	88 81       	ld	r24, Y
     e8e:	81 50       	subi	r24, 0x01	; 1
     e90:	82 30       	cpi	r24, 0x02	; 2
     e92:	18 f4       	brcc	.+6      	; 0xe9a <Kernel_Tick+0x8e>
    {
      ready_time_tasks++;
     e94:	ff ef       	ldi	r31, 0xFF	; 255
     e96:	af 1a       	sub	r10, r31
     e98:	bf 0a       	sbc	r11, r31
     e9a:	0a 5d       	subi	r16, 0xDA	; 218
     e9c:	1e 4f       	sbci	r17, 0xFE	; 254
     e9e:	ca 5d       	subi	r28, 0xDA	; 218
     ea0:	de 4f       	sbci	r29, 0xFE	; 254
void Kernel_Tick()
{
  current_tick++;
  int x;
  int ready_time_tasks = 0;
  for (x = 0; x < MAXPROCESS; x++) {
     ea2:	cc 15       	cp	r28, r12
     ea4:	dd 05       	cpc	r29, r13
     ea6:	89 f6       	brne	.-94     	; 0xe4a <Kernel_Tick+0x3e>
    if (Process[x].py == TIME && (Process[x].state == RUNNING || Process[x].state == READY))
    {
      ready_time_tasks++;
    }
  }
  if (ready_time_tasks > 1)
     ea8:	82 e0       	ldi	r24, 0x02	; 2
     eaa:	a8 16       	cp	r10, r24
     eac:	b1 04       	cpc	r11, r1
     eae:	6c f0       	brlt	.+26     	; 0xeca <Kernel_Tick+0xbe>

/**
  * TODO: communicate error code
  */
void OS_Abort(unsigned int error) {
	OS_ABORT_DEBUG_PORT = error;
     eb0:	85 e0       	ldi	r24, 0x05	; 5
     eb2:	88 b9       	out	0x08, r24	; 8
     eb4:	ff cf       	rjmp	.-2      	; 0xeb4 <Kernel_Tick+0xa8>
      Process[x].executed_ticks++;
      if (Process[x].executed_ticks >= Process[x].wcet){
        OS_Abort(ERROR_WCET_VIOLATION);
      }
    }
    if (Process[x].state == SUSPENDED && Process[x].py == TIME && Process[x].next_schedule == current_tick)
     eb6:	8a 89       	ldd	r24, Y+18	; 0x12
     eb8:	9b 89       	ldd	r25, Y+19	; 0x13
     eba:	20 91 bc 04 	lds	r18, 0x04BC	; 0x8004bc <current_tick>
     ebe:	30 91 bd 04 	lds	r19, 0x04BD	; 0x8004bd <current_tick+0x1>
     ec2:	82 17       	cp	r24, r18
     ec4:	93 07       	cpc	r25, r19
     ec6:	49 f7       	brne	.-46     	; 0xe9a <Kernel_Tick+0x8e>
     ec8:	d5 cf       	rjmp	.-86     	; 0xe74 <Kernel_Tick+0x68>
  //   if(Cp->executed_ticks >= Cp->wcet){
  //     OS_Abort(ERROR_WCET_VIOLATION);
  //   }
  // }

}
     eca:	df 91       	pop	r29
     ecc:	cf 91       	pop	r28
     ece:	1f 91       	pop	r17
     ed0:	0f 91       	pop	r16
     ed2:	ff 90       	pop	r15
     ed4:	ef 90       	pop	r14
     ed6:	df 90       	pop	r13
     ed8:	cf 90       	pop	r12
     eda:	bf 90       	pop	r11
     edc:	af 90       	pop	r10
     ede:	08 95       	ret

00000ee0 <__vector_32>:

int ticks_for_current_task = 0;
// This ISR fires every MSECPERTICKms and represents our RTOS tick
ISR(TIMER3_COMPA_vect)
{
     ee0:	1f 92       	push	r1
     ee2:	0f 92       	push	r0
     ee4:	0f b6       	in	r0, 0x3f	; 63
     ee6:	0f 92       	push	r0
     ee8:	11 24       	eor	r1, r1
     eea:	0b b6       	in	r0, 0x3b	; 59
     eec:	0f 92       	push	r0
     eee:	2f 93       	push	r18
     ef0:	3f 93       	push	r19
     ef2:	4f 93       	push	r20
     ef4:	5f 93       	push	r21
     ef6:	6f 93       	push	r22
     ef8:	7f 93       	push	r23
     efa:	8f 93       	push	r24
     efc:	9f 93       	push	r25
     efe:	af 93       	push	r26
     f00:	bf 93       	push	r27
     f02:	ef 93       	push	r30
     f04:	ff 93       	push	r31
  Kernel_Tick();
     f06:	82 df       	rcall	.-252    	; 0xe0c <Kernel_Tick>
  ticks_for_current_task ++;  
     f08:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <__DATA_REGION_ORIGIN__>
     f0c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     f10:	01 96       	adiw	r24, 0x01	; 1
     f12:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     f16:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__DATA_REGION_ORIGIN__>
  if (Cp->py >= RR && ticks_for_current_task >= Cp->arg)
     f1a:	e0 91 ba 04 	lds	r30, 0x04BA	; 0x8004ba <Cp>
     f1e:	f0 91 bb 04 	lds	r31, 0x04BB	; 0x8004bb <Cp+0x1>
     f22:	22 81       	ldd	r18, Z+2	; 0x02
     f24:	22 30       	cpi	r18, 0x02	; 2
     f26:	60 f0       	brcs	.+24     	; 0xf40 <__vector_32+0x60>
     f28:	e5 5f       	subi	r30, 0xF5	; 245
     f2a:	fe 4f       	sbci	r31, 0xFE	; 254
     f2c:	20 81       	ld	r18, Z
     f2e:	31 81       	ldd	r19, Z+1	; 0x01
     f30:	82 17       	cp	r24, r18
     f32:	93 07       	cpc	r25, r19
  {
    Task_Next();
     f34:	2c f0       	brlt	.+10     	; 0xf40 <__vector_32+0x60>
     f36:	34 df       	rcall	.-408    	; 0xda0 <Task_Next>
	ticks_for_current_task = 0;
     f38:	10 92 01 02 	sts	0x0201, r1	; 0x800201 <__DATA_REGION_ORIGIN__+0x1>
     f3c:	10 92 00 02 	sts	0x0200, r1	; 0x800200 <__DATA_REGION_ORIGIN__>
  }
}
     f40:	ff 91       	pop	r31
     f42:	ef 91       	pop	r30
     f44:	bf 91       	pop	r27
     f46:	af 91       	pop	r26
     f48:	9f 91       	pop	r25
     f4a:	8f 91       	pop	r24
     f4c:	7f 91       	pop	r23
     f4e:	6f 91       	pop	r22
     f50:	5f 91       	pop	r21
     f52:	4f 91       	pop	r20
     f54:	3f 91       	pop	r19
     f56:	2f 91       	pop	r18
     f58:	0f 90       	pop	r0
     f5a:	0b be       	out	0x3b, r0	; 59
     f5c:	0f 90       	pop	r0
     f5e:	0f be       	out	0x3f, r0	; 63
     f60:	0f 90       	pop	r0
     f62:	1f 90       	pop	r1
     f64:	18 95       	reti

00000f66 <Init_Debug_LEDs>:

void Init_Debug_LEDs()
{
  DDRL |= (1<<PL2);
     f66:	ea e0       	ldi	r30, 0x0A	; 10
     f68:	f1 e0       	ldi	r31, 0x01	; 1
     f6a:	80 81       	ld	r24, Z
     f6c:	84 60       	ori	r24, 0x04	; 4
     f6e:	80 83       	st	Z, r24
  DDRL |= (1<<PL3);
     f70:	80 81       	ld	r24, Z
     f72:	88 60       	ori	r24, 0x08	; 8
     f74:	80 83       	st	Z, r24
  DDRL |= (1<<PL4);
     f76:	80 81       	ld	r24, Z
     f78:	80 61       	ori	r24, 0x10	; 16
     f7a:	80 83       	st	Z, r24
  DDRC = 0xFF;
     f7c:	8f ef       	ldi	r24, 0xFF	; 255
     f7e:	87 b9       	out	0x07, r24	; 7
     f80:	08 95       	ret

00000f82 <main>:
/**
  * OS main function
  */
int main()
{
   OS_Init();
     f82:	16 dd       	rcall	.-1492   	; 0x9b0 <OS_Init>
   Init_Debug_LEDs();
     f84:	f0 df       	rcall	.-32     	; 0xf66 <Init_Debug_LEDs>
     f86:	60 e0       	ldi	r22, 0x00	; 0
   // Here we create a task for a_main which should be defined externally to create
   // all tasks needed for the application, and then terminate.
   // #TODO this should be created as a system task once we implement this functionality
   Task_Create_Idle(Idle_Task, 0);
     f88:	70 e0       	ldi	r23, 0x00	; 0
     f8a:	8f e4       	ldi	r24, 0x4F	; 79
     f8c:	91 e0       	ldi	r25, 0x01	; 1
     f8e:	b2 de       	rcall	.-668    	; 0xcf4 <Task_Create_Idle>
     f90:	62 e0       	ldi	r22, 0x02	; 2
   Task_Create_System( a_main , PL2);
     f92:	70 e0       	ldi	r23, 0x00	; 0
     f94:	82 ee       	ldi	r24, 0xE2	; 226
     f96:	97 e0       	ldi	r25, 0x07	; 7
   Timer_Init();
     f98:	70 de       	rcall	.-800    	; 0xc7a <Task_Create_System>
     f9a:	1b df       	rcall	.-458    	; 0xdd2 <Timer_Init>
   OS_Start();
     f9c:	3e dd       	rcall	.-1412   	; 0xa1a <OS_Start>
     f9e:	80 e0       	ldi	r24, 0x00	; 0
}
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	08 95       	ret

00000fa4 <Task_RR0>:
     fa4:	80 e0       	ldi	r24, 0x00	; 0

void Task_P4()
{
	for(;;) {
		blink(4);
		Task_Next();
     fa6:	90 e0       	ldi	r25, 0x00	; 0
     fa8:	63 d9       	rcall	.-3386   	; 0x270 <blink>
     faa:	fc cf       	rjmp	.-8      	; 0xfa4 <Task_RR0>

00000fac <Task_RR1>:
     fac:	81 e0       	ldi	r24, 0x01	; 1
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	5f d9       	rcall	.-3394   	; 0x270 <blink>
     fb2:	fc cf       	rjmp	.-8      	; 0xfac <Task_RR1>

00000fb4 <Task_RR2>:
     fb4:	82 e0       	ldi	r24, 0x02	; 2
     fb6:	90 e0       	ldi	r25, 0x00	; 0
     fb8:	5b d9       	rcall	.-3402   	; 0x270 <blink>
     fba:	fc cf       	rjmp	.-8      	; 0xfb4 <Task_RR2>

00000fbc <Task_RR3>:
     fbc:	83 e0       	ldi	r24, 0x03	; 3
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	57 d9       	rcall	.-3410   	; 0x270 <blink>
     fc2:	fc cf       	rjmp	.-8      	; 0xfbc <Task_RR3>

00000fc4 <a_main>:

void a_main()
{
	/* Uncomment the following when you're done with changes*/

	Task_Create_WRR(Task_RR0,0, 1);
     fc4:	41 e0       	ldi	r20, 0x01	; 1
     fc6:	50 e0       	ldi	r21, 0x00	; 0
     fc8:	60 e0       	ldi	r22, 0x00	; 0
     fca:	70 e0       	ldi	r23, 0x00	; 0
     fcc:	82 ed       	ldi	r24, 0xD2	; 210
     fce:	97 e0       	ldi	r25, 0x07	; 7
     fd0:	dc dd       	rcall	.-1096   	; 0xb8a <Task_Create_WRR>
	Task_Create_WRR(Task_RR1,0, 4);
     fd2:	44 e0       	ldi	r20, 0x04	; 4
     fd4:	50 e0       	ldi	r21, 0x00	; 0
     fd6:	60 e0       	ldi	r22, 0x00	; 0
     fd8:	70 e0       	ldi	r23, 0x00	; 0
     fda:	86 ed       	ldi	r24, 0xD6	; 214
     fdc:	97 e0       	ldi	r25, 0x07	; 7
     fde:	d5 dd       	rcall	.-1110   	; 0xb8a <Task_Create_WRR>
	Task_Create_WRR(Task_RR2,0, 16);
     fe0:	40 e1       	ldi	r20, 0x10	; 16
     fe2:	50 e0       	ldi	r21, 0x00	; 0
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	8a ed       	ldi	r24, 0xDA	; 218
     fea:	97 e0       	ldi	r25, 0x07	; 7
     fec:	ce dd       	rcall	.-1124   	; 0xb8a <Task_Create_WRR>
	Task_Create_RR(Task_RR3,0);
     fee:	60 e0       	ldi	r22, 0x00	; 0
     ff0:	70 e0       	ldi	r23, 0x00	; 0
     ff2:	8e ed       	ldi	r24, 0xDE	; 222
     ff4:	97 e0       	ldi	r25, 0x07	; 7
     ff6:	05 ce       	rjmp	.-1014   	; 0xc02 <Task_Create_RR>
     ff8:	08 95       	ret

00000ffa <__tablejump2__>:
     ffa:	ee 0f       	add	r30, r30
     ffc:	ff 1f       	adc	r31, r31
     ffe:	88 1f       	adc	r24, r24
    1000:	8b bf       	out	0x3b, r24	; 59
    1002:	07 90       	elpm	r0, Z+
    1004:	f6 91       	elpm	r31, Z
    1006:	e0 2d       	mov	r30, r0
    1008:	19 94       	eijmp

0000100a <_exit>:
    100a:	f8 94       	cli

0000100c <__stop_program>:
    100c:	ff cf       	rjmp	.-2      	; 0x100c <__stop_program>
